{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuval\\\\Documents\\\\GitHub\\\\Project_Mascha\\\\moshe\\\\src\\\\components\\\\Statistics.js\";\nimport React from 'react';\nimport { db } from '../firebase/firebase';\nimport \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Statistics extends React.Component {\n  componentDidMount() {\n    db.collection(\"Forms\").get().then(ans => {\n      ans.forEach(element => {\n        if (element.exists) {\n          if (element.data()) {\n            let tr = document.createElement('tr');\n            let td = document.createElement('td');\n            tr.appendChild(td);\n            td.textContent = element.id;\n            let td2 = document.createElement('td'); //now we start to be diffrent from stat_table\n\n            tr.appendChild(td2);\n            td2.textContent = element.data().quest;\n            let x0, x1, x2, x3, x4;\n            let sumofanswers = 0;\n\n            if (element.data().answersstats) {\n              x0 = element.data().answersstats[0];\n              x1 = element.data().answersstats[1];\n              x2 = element.data().answersstats[2];\n              x3 = element.data().answersstats[3];\n              x4 = element.data().answersstats[4];\n            }\n\n            sumofanswers = x0 + x1 + x2 + x3 + x4;\n            let td3 = document.createElement('td');\n            tr.appendChild(td3);\n            let td4 = document.createElement('td');\n            tr.appendChild(td4);\n            let td5 = document.createElement('td');\n            tr.appendChild(td5);\n            let td6 = document.createElement('td');\n            tr.appendChild(td6);\n            let td7 = document.createElement('td');\n            tr.appendChild(td7); //to show precentege only with doubles\n\n            td3.textContent = (x0 * 100 / sumofanswers).toFixed(2) + \"%\";\n            td4.textContent = (x1 * 100 / sumofanswers).toFixed(2) + \"%\";\n            td5.textContent = (x2 * 100 / sumofanswers).toFixed(2) + \"%\";\n            td6.textContent = (x3 * 100 / sumofanswers).toFixed(2) + \"%\";\n            td7.textContent = (x4 * 100 / sumofanswers).toFixed(2) + \"%\";\n            document.getElementById(\"second_stat_table\").appendChild(tr);\n          }\n        }\n      });\n      sortTable(\"second_stat_table\");\n    }); //getting the questions list and quest num to our stat list\n\n    db.collection(\"Forms\").get().then(ans => {\n      ans.forEach(element => {\n        if (element.exists) {\n          if (element.data()) {\n            let tr = document.createElement('tr');\n            let td = document.createElement('td');\n            tr.appendChild(td);\n            td.textContent = element.id;\n            let td2 = document.createElement('td');\n            tr.appendChild(td2);\n            td2.id = element.id;\n            td2.textContent = element.data().quest;\n            let td3 = document.createElement('td');\n            tr.appendChild(td3);\n            let td4 = document.createElement('td');\n            tr.appendChild(td4);\n            let td5 = document.createElement('td');\n            tr.appendChild(td5);\n            let td6 = document.createElement('td');\n            tr.appendChild(td6);\n            let td7 = document.createElement('td');\n            tr.appendChild(td7);\n\n            if (element.data().answersstats) {\n              td3.textContent = element.data().answersstats[0];\n              td4.textContent = element.data().answersstats[1];\n              td5.textContent = element.data().answersstats[2];\n              td6.textContent = element.data().answersstats[3];\n              td7.textContent = element.data().answersstats[4];\n            } else {\n              td3.textContent = 0;\n              td4.textContent = 0;\n              td5.textContent = 0;\n              td6.textContent = 0;\n              td7.textContent = 0;\n            } // ///////////////////set stats button\n\n\n            let setstat = document.createElement('button');\n            tr.appendChild(setstat);\n            setstat.textContent = \"שנה ערכים\";\n\n            setstat.onclick = function () {\n              //decide which answerstat you want to change\n              let numberchosen = document.createElement('input');\n              numberchosen.id = \"numberchosen\";\n              numberchosen.type = \"number\";\n              numberchosen.placeholder = 0;\n              let br = document.createElement('br');\n              tr.appendChild(br);\n              tr.appendChild(numberchosen);\n              tr.append(\"עמודה\");\n              let setarray = document.createElement('input');\n              setarray.id = \"setarray\";\n              setarray.type = \"number\";\n              setarray.placeholder = 0;\n              setarray.size = 4;\n              setarray.maxlength = 4;\n              br = document.createElement('br');\n              tr.appendChild(br);\n              tr.appendChild(setarray);\n              tr.append(\"ערך\");\n              br = document.createElement('br');\n              tr.appendChild(br);\n              let submit = document.createElement(\"button\");\n              submit.innerHTML = \"בצע שינוי\";\n\n              submit.onclick = function () {\n                let i = document.getElementById(\"numberchosen\").value;\n                i = i - 1;\n                let newvalue = document.getElementById(\"setarray\").value;\n                newvalue = parseInt(newvalue); //now we set the db based on the value we got\n\n                var d = element.id.toString();\n\n                if (i === 0) {\n                  db.collection('Forms').doc(d).update({\n                    answersstats: [newvalue, element.data().answersstats[1], element.data().answersstats[2], element.data().answersstats[3], element.data().answersstats[4]]\n                  }, {\n                    merge: true\n                  });\n                }\n\n                if (i === 1) {\n                  db.collection('Forms').doc(d).update({\n                    answersstats: [element.data().answersstats[0], newvalue, element.data().answersstats[2], element.data().answersstats[3], element.data().answersstats[4]]\n                  }, {\n                    merge: true\n                  });\n                }\n\n                if (i === 2) {\n                  db.collection('Forms').doc(d).update({\n                    answersstats: [element.data().answersstats[0], element.data().answersstats[1], newvalue, element.data().answersstats[3], element.data().answersstats[4]]\n                  }, {\n                    merge: true\n                  });\n                }\n\n                if (i === 3) {\n                  db.collection('Forms').doc(d).update({\n                    answersstats: [element.data().answersstats[0], element.data().answersstats[1], element.data().answersstats[2], newvalue, element.data().answersstats[4]]\n                  }, {\n                    merge: true\n                  });\n                }\n\n                if (i === 4) {\n                  db.collection('Forms').doc(d).update({\n                    answersstats: [element.data().answersstats[0], element.data().answersstats[1], element.data().answersstats[2], element.data().answersstats[3], newvalue]\n                  }, {\n                    merge: true\n                  });\n                }\n              };\n\n              tr.appendChild(submit);\n            }; // /////////end of set stat \n\n\n            document.getElementById(\"stat_table\").appendChild(tr);\n          }\n        }\n      });\n      sortTable(\"stat_table\");\n    }); //users and admin lists\n\n    db.collection(\"users\").get().then(ans => {\n      ans.forEach(element => {\n        if (element.exists) {\n          element.data().users.forEach(e => {\n            let test = e;\n            let tr = document.createElement('tr');\n            let td = document.createElement('td');\n            td.textContent = test;\n            tr.appendChild(td);\n            document.getElementById(\"list_of_current_users\").appendChild(tr);\n          });\n          element.data().admins.forEach(e => {\n            let test = e;\n            let tr = document.createElement('tr');\n            let td = document.createElement('td');\n            td.textContent = test;\n            tr.appendChild(td);\n            document.getElementById(\"list_of_current_admins\").appendChild(tr);\n          });\n        }\n      });\n    });\n\n    function sortTable(which_table) {\n      var table, rows, switching, i, x, y, shouldSwitch;\n      table = document.getElementById(which_table);\n      switching = true;\n      /*Make a loop that will continue until\r\n      no switching has been done:*/\n\n      while (switching) {\n        //start by saying: no switching is done:\n        switching = false;\n        rows = table.rows;\n        /*Loop through all table rows (except the\r\n        first, which contains table headers):*/\n\n        for (i = 1; i < rows.length - 1; i++) {\n          //start by saying there should be no switching:\n          shouldSwitch = false;\n          /*Get the two elements you want to compare,\r\n          one from current row and one from the next:*/\n\n          x = rows[i].getElementsByTagName(\"TD\")[0];\n          y = rows[i + 1].getElementsByTagName(\"TD\")[0]; //check if the two rows should switch place:\n          //if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n\n          if (Number(x.innerHTML) > Number(y.innerHTML)) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n\n        if (shouldSwitch) {\n          /*If a switch has been marked, make the switch\r\n          and mark that a switch has been done:*/\n          rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n          switching = true;\n        }\n      }\n    } //end of componnenet did mount\n\n  } ///buton to reset the tables and the firestore\n\n\n  resetstats() {\n    db.collection(\"Forms\").get().then(ans => {\n      ans.forEach(element => {\n        if (element.exists) {\n          let d = parseInt(element.id);\n          d = d.toString();\n\n          if (element.data().answersstats) {\n            db.collection(\"Forms\").doc(d).update({\n              answersstats: [0, 0, 0, 0, 0]\n            }, {\n              merge: true\n            });\n          }\n        }\n      });\n    });\n    alert(\"reset done\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"stat_table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05E9\\u05D0\\u05DC\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05E9\\u05D0\\u05DC\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 92\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05DB\\u05E4\\u05EA\\u05D5\\u05E8 \\u05E9\\u05D9\\u05E0\\u05D5\\u05D9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 102\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reset_stats\",\n        className: \"btn btn-primary\",\n        onClick: () => {\n          this.resetstats();\n        },\n        children: \"\\u05D0\\u05E4\\u05E1 \\u05E1\\u05D8\\u05D8\\u05D9\\u05E1\\u05D8\\u05D9\\u05E7\\u05D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"second_stat_table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05E9\\u05D0\\u05DC\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u05E9\\u05D0\\u05DC\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 62\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 72\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 92\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"users_admin_table\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"list_of_current_users\",\n          children: \"users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"list_of_current_admins\",\n          children: \"admin?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 80\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default Statistics;","map":{"version":3,"sources":["C:/Users/Yuval/Documents/GitHub/Project_Mascha/moshe/src/components/Statistics.js"],"names":["React","db","Statistics","Component","componentDidMount","collection","get","then","ans","forEach","element","exists","data","tr","document","createElement","td","appendChild","textContent","id","td2","quest","x0","x1","x2","x3","x4","sumofanswers","answersstats","td3","td4","td5","td6","td7","toFixed","getElementById","sortTable","setstat","onclick","numberchosen","type","placeholder","br","append","setarray","size","maxlength","submit","innerHTML","i","value","newvalue","parseInt","d","toString","doc","update","merge","users","e","test","admins","which_table","table","rows","switching","x","y","shouldSwitch","length","getElementsByTagName","Number","parentNode","insertBefore","resetstats","alert","render"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport {db} from '../firebase/firebase'\r\nimport \"firebase/firestore\";\r\n\r\n\r\nclass Statistics extends React.Component{\r\n \r\n     \r\n\r\n    componentDidMount(){\r\n\r\n        \r\n        db.collection(\"Forms\").get().then((ans)=>{\r\n            ans.forEach(element => {\r\n                if(element.exists){\r\n                     if(element.data())\r\n                        {\r\n                            let tr = document.createElement('tr');\r\n                            let td = document.createElement('td');\r\n                            tr.appendChild(td);\r\n                            td.textContent=element.id;\r\n                            let td2 = document.createElement('td');\r\n                  //now we start to be diffrent from stat_table\r\n                            tr.appendChild(td2);\r\n                            td2.textContent=element.data().quest;\r\n                            \r\n                            let x0,x1,x2,x3,x4;\r\n                            let sumofanswers=0\r\n                            if(element.data().answersstats)\r\n                            {\r\n                             x0=element.data().answersstats[0];\r\n                             x1=element.data().answersstats[1];\r\n                             x2=element.data().answersstats[2];\r\n                             x3=element.data().answersstats[3];\r\n                             x4=element.data().answersstats[4];\r\n                            }\r\n                            \r\n                            sumofanswers=x0+x1+x2+x3+x4;\r\n\r\n                            let td3 = document.createElement('td');\r\n                        tr.appendChild(td3);\r\n                        \r\n                        let td4 = document.createElement('td');\r\n                        tr.appendChild(td4);\r\n                        \r\n                        let td5 = document.createElement('td');\r\n                        tr.appendChild(td5);\r\n                        \r\n                        let td6 = document.createElement('td');\r\n                        tr.appendChild(td6);\r\n                        \r\n                        let td7 = document.createElement('td');\r\n                        tr.appendChild(td7);\r\n\r\n                                //to show precentege only with doubles\r\n                        td3.textContent=(x0*100/sumofanswers).toFixed(2)+\"%\";\r\n                        td4.textContent=(x1*100/sumofanswers).toFixed(2)+\"%\";\r\n                        td5.textContent=(x2*100/sumofanswers).toFixed(2)+\"%\";\r\n                        td6.textContent=(x3*100/sumofanswers).toFixed(2)+\"%\";\r\n                        td7.textContent=(x4*100/sumofanswers).toFixed(2)+\"%\";\r\n                            document.getElementById(\"second_stat_table\").appendChild(tr); \r\n                        }\r\n                    \r\n                }\r\n             });\r\n        sortTable(\"second_stat_table\");\r\n            });\r\n\r\n    //getting the questions list and quest num to our stat list\r\n\r\n       db.collection(\"Forms\").get().then((ans)=>{\r\n        ans.forEach(element => {\r\n            if(element.exists){\r\n                 if(element.data())\r\n                    {\r\n                        let tr = document.createElement('tr');\r\n                        let td = document.createElement('td');\r\n                        tr.appendChild(td);\r\n                         td.textContent=element.id;\r\n\r\n                         let td2 = document.createElement('td');\r\n                        tr.appendChild(td2);\r\n                        td2.id=element.id;\r\n                        td2.textContent=element.data().quest;\r\n                        let td3 = document.createElement('td');\r\n                        tr.appendChild(td3);\r\n                        \r\n                        let td4 = document.createElement('td');\r\n                        tr.appendChild(td4);\r\n                        \r\n                        let td5 = document.createElement('td');\r\n                        tr.appendChild(td5);\r\n                        \r\n                        let td6 = document.createElement('td');\r\n                        tr.appendChild(td6);\r\n                        \r\n                        let td7 = document.createElement('td');\r\n                        tr.appendChild(td7);\r\n\r\n                       \r\n\r\n                        if(element.data().answersstats)\r\n                        {td3.textContent=element.data().answersstats[0];\r\n                        td4.textContent=element.data().answersstats[1];\r\n                        td5.textContent=element.data().answersstats[2];\r\n                        td6.textContent=element.data().answersstats[3];\r\n                        td7.textContent=element.data().answersstats[4];\r\n                        \r\n                        }\r\n                        else{\r\n                        td3.textContent=0;\r\n                        td4.textContent=0;\r\n                        td5.textContent=0;\r\n                        td6.textContent=0;\r\n                        td7.textContent=0;\r\n                       \r\n                    }\r\n                    // ///////////////////set stats button\r\n                 \r\n                    let setstat = document.createElement('button');\r\n                    tr.appendChild(setstat);\r\n                    setstat.textContent=\"שנה ערכים\";\r\n                   setstat.onclick=function() {\r\n\r\n\r\n                    //decide which answerstat you want to change\r\n                       \r\n                       let numberchosen = document.createElement('input');\r\n                       numberchosen.id=\"numberchosen\"\r\n                       numberchosen.type=\"number\";\r\n                       numberchosen.placeholder=0;\r\n\r\n                       let br =document.createElement('br');\r\n                       tr.appendChild(br)\r\n                       tr.appendChild(numberchosen);\r\n                       tr.append(\"עמודה\")\r\n                     \r\n                   let setarray = document.createElement('input');\r\n                   setarray.id=\"setarray\"\r\n                   setarray.type=\"number\";\r\n                   \r\n                   setarray.placeholder=0;\r\n                   setarray.size=4;\r\n                   setarray.maxlength=4;\r\n                    br =document.createElement('br');\r\n                   tr.appendChild(br)\r\n                   tr.appendChild(setarray);\r\n                   tr.append(\"ערך\")\r\n                   br =document.createElement('br');\r\n                   tr.appendChild(br)\r\n                        \r\n                   \r\n                    let submit=document.createElement(\"button\");\r\n                    submit.innerHTML=\"בצע שינוי\"\r\n                    submit.onclick=function() {\r\n                    let i=document.getElementById(\"numberchosen\").value;\r\n                    i=i-1;\r\n\r\n                    let newvalue=document.getElementById(\"setarray\").value;\r\n                    newvalue=parseInt(newvalue);\r\n                        \r\n                   //now we set the db based on the value we got\r\n                   var d=element.id.toString();\r\n                        if(i===0)\r\n                        {\r\n                            db.collection('Forms').doc(d).update({\r\n                            answersstats:[newvalue,element.data().answersstats[1],element.data().answersstats[2],element.data().answersstats[3],element.data().answersstats[4]]\r\n                        } ,{ merge: true });   \r\n                    }\r\n                        \r\n                        if(i===1)\r\n                        {   db.collection('Forms').doc(d).update({\r\n                            answersstats:[element.data().answersstats[0],newvalue,element.data().answersstats[2],element.data().answersstats[3],element.data().answersstats[4]]\r\n                        } ,{ merge: true });    }\r\n                        if(i===2)\r\n                        {   db.collection('Forms').doc(d).update({\r\n                            answersstats:[element.data().answersstats[0],element.data().answersstats[1],newvalue,element.data().answersstats[3],element.data().answersstats[4]]\r\n                        } ,{ merge: true });    }\r\n                        if(i===3)\r\n                        {   db.collection('Forms').doc(d).update({\r\n                            answersstats:[element.data().answersstats[0],element.data().answersstats[1],element.data().answersstats[2],newvalue,element.data().answersstats[4]]\r\n                        } ,{ merge: true });    }\r\n                        if(i===4)\r\n                        {   db.collection('Forms').doc(d).update({\r\n                            answersstats:[element.data().answersstats[0],element.data().answersstats[1],element.data().answersstats[2],element.data().answersstats[3],newvalue]\r\n                        } ,{ merge: true });    }\r\n                        \r\n\r\n\r\n\r\n                    }\r\n              \r\n               tr.appendChild(submit);\r\n                   \r\n                \r\n              \r\n                \r\n                };\r\n\r\n                // /////////end of set stat \r\n\r\n\r\n                        document.getElementById(\"stat_table\").appendChild(tr); \r\n\r\n                        \r\n                    }\r\n                \r\n            }\r\n       }\r\n        );\r\n    sortTable(\"stat_table\");\r\n    }\r\n       );\r\n\r\n       \r\n\r\n\r\n//users and admin lists\r\n      db.collection(\"users\").get().then((ans)=>{\r\n        ans.forEach(element => {\r\n            if(element.exists){\r\n          \r\n            element.data().users.forEach(e=>{\r\n                let test=e;\r\n                let tr = document.createElement('tr')\r\n                let td = document.createElement('td')\r\n\r\n                td.textContent = test\r\n                tr.appendChild(td)\r\n                document.getElementById(\"list_of_current_users\").appendChild(tr); \r\n            })\r\n            \r\n            element.data().admins.forEach(e=>{\r\n                let test=e;\r\n                let tr = document.createElement('tr')\r\n                let td = document.createElement('td')\r\n\r\n                td.textContent = test\r\n                tr.appendChild(td)\r\n                document.getElementById(\"list_of_current_admins\").appendChild(tr); \r\n            })\r\n        \r\n          \r\n            \r\n        \r\n        }\r\n        }\r\n            );\r\n        \r\n\r\n        }\r\n            );\r\n\r\n\r\n            \r\n    function sortTable(which_table) {\r\n        var table, rows, switching, i, x, y, shouldSwitch;\r\n        table = document.getElementById(which_table);\r\n        switching = true;\r\n        /*Make a loop that will continue until\r\n        no switching has been done:*/\r\n        while (switching) {\r\n          //start by saying: no switching is done:\r\n          switching = false;\r\n          rows = table.rows;\r\n          /*Loop through all table rows (except the\r\n          first, which contains table headers):*/\r\n          for (i = 1; i < (rows.length - 1); i++) {\r\n            //start by saying there should be no switching:\r\n            shouldSwitch = false;\r\n            /*Get the two elements you want to compare,\r\n            one from current row and one from the next:*/\r\n            x = rows[i].getElementsByTagName(\"TD\")[0];\r\n            y = rows[i + 1].getElementsByTagName(\"TD\")[0];\r\n            //check if the two rows should switch place:\r\n            //if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\r\n              if (Number(x.innerHTML) > Number(y.innerHTML)){\r\n              //if so, mark as a switch and break the loop:\r\n              shouldSwitch = true;\r\n              break;\r\n            }\r\n          }\r\n          if (shouldSwitch) {\r\n            /*If a switch has been marked, make the switch\r\n            and mark that a switch has been done:*/\r\n            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\r\n            switching = true;\r\n          }\r\n        }\r\n      }\r\n            //end of componnenet did mount\r\n        }\r\n       \r\n        \r\n             ///buton to reset the tables and the firestore\r\n        resetstats()\r\n        {\r\n           db.collection(\"Forms\").get().then((ans) => {\r\n            ans.forEach(element => {\r\n                if(element.exists){\r\n                    let d=parseInt(element.id);\r\n                    d=d.toString();\r\n                    \r\n                    if(element.data().answersstats)\r\n                    {\r\n                     \r\n                       db.collection(\"Forms\").doc(d).update({\r\n                        answersstats:[0,0,0,0,0],\r\n                       },{ merge: true });\r\n                   \r\n                    }\r\n                }\r\n        });\r\n    });\r\n\r\nalert(\"reset done\");\r\n}\r\n   \r\n\r\n    \r\n render(){\r\n     return(\r\n         <div>\r\n         \r\n        \r\n        <table id=\"stat_table\" >\r\n        <tbody> <tr><th>מספר שאלה</th><th>שאלה</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>כפתור שינוי</th></tr>\r\n        </tbody></table>\r\n        <br></br>\r\n        <button id=\"reset_stats\" className=\"btn btn-primary\" onClick={()=>{this.resetstats()}}>אפס סטטיסטיקה</button> \r\n        \r\n        <br></br><br></br><br></br>\r\n\r\n        <table id=\"second_stat_table\" >\r\n        <tbody> <tr><th>מספר שאלה</th><th>שאלה</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr>\r\n        </tbody></table>\r\n        <br></br><br></br><br></br>\r\n        <table id=\"users_admin_table\"><th id=\"list_of_current_users\">users</th><th id=\"list_of_current_admins\">admin?</th></table>\r\n        \r\n         </div>\r\n     );\r\n }   \r\n\r\n}\r\n \r\nexport default Statistics"]},"metadata":{},"sourceType":"module"}