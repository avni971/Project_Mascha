{"ast":null,"code":"// import {db} from '../firebase/firebase'\n// import React from 'react'\n// import {Card} from 'react-bootstrap'\n// import \"firebase/firestore\";\n// // import { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\n// // const handleSubmit = (e) => {\n// //     console.log(e);\n// //     e.preventDefault(); // Prevents default refresh by the browser\n// //     emailjs.sendForm(`gmail`, apiKey.TEMPLATE_ID, e.target, apiKey.USER_ID)\n// //     .then((result) => {\n// //     alert(\"Message Sent, We will get back to you shortly\", result.text);\n// //     },\n// //     (error) => {\n// //     alert(\"An error occurred, Please try again\", error.text);\n// //     });\n// //     };\n// class FormHook extends React.Component{\n//     static numGlo = 0;\n//     constructor(props){\n//         super(props)\n//         this.state={\n//         }\n//     }\n// //__________________________________________COMMPONENT DID MOUNT______________________________________________\n//     async componentDidMount(){\n//         let secs1=[]\n//         let secs2=[]\n//         let secs3=[]\n// try{\n//         let forms = await db.collection(\"Forms\").get()\n//         let i;\n//         let indexarray=[];\n//         forms.docs.forEach((form,index) =>{\n//             i=parseInt(form.id);\n//             indexarray.push(i);\n//         //     if(form.data().zone===1)\n//         //     {\n//         //      secs1.push(form.data())\n//         //     }\n//         //    if(form.data().zone===2)\n//         //    {\n//         //     secs2.push(form.data())\n//         //    }\n//         //    if(form.data().zone===3)\n//         //    {\n//         //     secs3.push(form.data())\n//         //    }\n//         })\n//         indexarray.sort((a,b)=>a-b);\n// for(let j=0;j<indexarray.length;j++)\n// {   let k=j.toString()\n//     var docRef = db.collection(\"Forms\").doc(k);\n// docRef.get().then((doc) => {\n//     if (doc.exists) {\n//         switch(doc.data().zone){\n//             case 1:\n//              secs1.push(doc.data()); break;\n//              case 2:\n//                  secs2.push(doc.data()); break;\n//                  case 3:\n//                      secs3.push(doc.data()); break;\n//                      default:break;\n//          }\n// }\n// });\n// }\n// this.setState({secs1:secs1,secs2:secs2,secs3:secs3})\n// console.log(this.state) \n// }\n// catch(error){\n//     alert(error);\n// }\n//     }\n// //__________________________________________END OF COMPONENT MOUNT_________________________________________\n// //__________________________________________FUNCTIONS_______________________________________________________\n// //WRITE DATA put the data we get from the add question card and update our firestore db\n//     writeData(question,num,zone) {\n//         let arrString = \"\";\n//         let megaString = \"\";\n//         for(let i = 0; i < this.numGlo-1 ; i++){\n//             arrString = \"quest\" + i\n//             megaString += document.getElementById(arrString).value + \"$$\"\n//         }\n//         arrString = \"quest\" + (this.numGlo-1)\n//         megaString += document.getElementById(arrString).value\n//         let yuvalquestionnum;\n//         db.collection('questionsnum').get().then((ans) => {\n//             ans.forEach(element => {\n//                 if(element.exists){\n//                     yuvalquestionnum=element.data().yuvalquestionnum;\n//                     //console.log(yuvalquestionnum);\n//                     let d=yuvalquestionnum.toString();\n//                     //update the forms\n//                     let docnum=parseInt(d);\n//                     db.collection(\"Forms\").doc(d).update(\n//                         {\n//                             quest: question,\n//                             numQuest : Number(num),\n//                             answers : megaString,\n//                             answersstats: [0,0,0,0,0],\n//                             questionNumber:Number(docnum),\n//                         }\n//                     )\n//                     //add +1 to question num\n//                     db.collection(\"questionsnum\").doc(\"questionsnum\").update(\n//                         {\n//                           yuvalquestionnum: yuvalquestionnum+1,\n//                         }\n//                     )\n//                 }\n//             });\n//             });\n//         document.getElementById(\"plusQ\").innerHTML = \"\";\n//         document.getElementById(\"numQuest\").value = \"\";\n//         document.getElementById(\"add\").value = \"\";\n//         alert(\"נוספה שאלה !\")\n//     }\n//   //SUPP DATA removes a question from our firestore db  \n//     suppData(question,num){\n//         //console.log(question)\n//         // //console.log(num)\n//         db.collection('Forms').get().then((ans) => {\n//             ans.forEach(element => {\n//                 if(element.exists){\n//                     if(element.data().quest === question && element.data().numQuest === num)\n//                         db.collection('Forms').doc(element.id).delete();\n//                 }\n//             })\n//         })\n//         document.getElementById(\"plusQ\").innerHTML = \"\";\n//         document.getElementById(\"numQuest\").value = \"\";\n//         document.getElementById(\"add\").value = \"\";\n//         alert(\"שאלה נמחקה !\")\n//     }\n// //QUESTION NUM is a helper funtion to get a name (quest-i) that only exist for our current question\n//     questionNum(num){\n//         let formC;\n//         let clasString;\n//         document.getElementById('plusQ').innerHTML = \"\";\n//         this.numGlo = num\n//         this.yuvalquestionnum++;\n//         for(let i = 0 ; i < num ; i++)\n//         {\n//             formC = document.createElement(\"input\");\n//             clasString = \"quest\" + i;\n//             formC.setAttribute(\"id\", clasString)\n//             document.getElementById(\"plusQ\").appendChild(formC)\n//         }\n//     }\n//     test1()\n//     {\n//       //  console.log('in')\n//     }\n// //SUBMIT FORM CLICKED is called when the submit button was clicked.\n// //it updates the firestore so the stat page will be ready for next read\n//     submitformclicked(){\n//         // adding +1 to the answer given by the form\n//         db.collection('Forms').get().then((ans)=>{\n//             ans.forEach(element=>{\n//                 if(element.exists)\n//                 {\n//                     //put in number the current question\n//                     let currentquestion=element.id.toString();\n//                     // console.log(currentquestion);\n//                     // console.log(element.data().quest);\n//                     //split the answers\n//                     let answeroptions\n//                     if(element.data().answers)\n//                     {\n//                          answeroptions=element.data().answers.split(\"$$\");\n//                         }\n//                         // console.log(answeroptions);                \n//                     //get the stats already in firestore\n//                     let x0,x1,x2,x3,x4;\n//                     // console.log(element.data().answersstats);\n//                     if(element.data().answersstats)\n//                     {\n//                         x0=parseInt(element.data().answersstats[0]);\n//                         x1=parseInt(element.data().answersstats[1]);\n//                         x2=parseInt(element.data().answersstats[2]);\n//                         x3=parseInt(element.data().answersstats[3]);\n//                         x4=parseInt(element.data().answersstats[4]);\n//                     }\n//                     // console.log(x0,x1,x2,x3,x4);\n//                     //find the picked answer from the form\n//                    for(let answer in answeroptions)\n//                    {\n//                     // console.log(answer);   \n//                     // console.log(answeroptions[answer]);\n//                     var k=document.getElementById(answeroptions[answer]);\n//                     if(k && k.checked)\n//                     {\n//                          console.log(k);\n//                         let place=parseInt(k.value)-1;\n//                         console.log(place);\n//                     //change the correct stat\n//                 //     if(place===0)\n//                 //     {\n//                 //         db.collection(\"Forms\").doc(currentquestion).update({\n//                 //         answersstats:[Number(x0+1),Number(x1),Number(x2),Number(x3),Number(x4)],\n//                 //     },{ merge: true });}\n//                 //     if(place===1)\n//                 //    { db.collection(\"Forms\").doc(currentquestion).update({\n//                 //         answersstats:[Number(x0),Number(x1+1),Number(x2),Number(x3),Number(x4)],\n//                 //     },{ merge: true });}\n//                 //     if(place===2)\n//                 //     {db.collection(\"Forms\").doc(currentquestion).update({\n//                 //         answersstats:[Number(x0),Number(x1),Number(x2+1),Number(x3),Number(x4)],\n//                 //     },{ merge: true });}\n//                 //     if(place===3)\n//                 //    { db.collection(\"Forms\").doc(currentquestion).update({\n//                 //         answersstats:[Number(x0),Number(x1),Number(x2),Number(x3+1),Number(x4)],\n//                 //     },{ merge: true });}\n//                 //     if(place===4)\n//                 //    { db.collection(\"Forms\").doc(currentquestion).update({\n//                 //         answersstats:[Number(x0),Number(x1),Number(x2),Number(x3),Number(x4+1)],\n//                 //     },{ merge: true });}\n//                     // //to make sure we dont go over same answer twcie\n//                     // k.checked=false;\n//                     // console.log(element.data());\n//                     }\n//                    }\n//                     //put it back in firestore\n//                 }\n//             });\n//         });\n//     }\n// //____________________render happens after commponent did mount in order to load the page_____________________    \n//     render(){\n//  //_____________________________the following code gets the questions from the db,\n//  //_____________________________builds an html tr for that question,\n//  //_____________________________check based on the secs where that question needs to go in the page and sends \n//         let textarray=Array(100);\n//             db.collection('Forms').get().then((ans) => {\n//             ans.forEach(element => {\n//                 if(element.exists){\n//                     let test = element.data()\n//                     let tr = document.createElement('tr')\n//                     let tdQuest = document.createElement('td')\n//                     tdQuest.classList.add(\"pQ\");\n//                     tdQuest.id=parseInt(element.id);\n//                     tdQuest.textContent = test.quest\n//                     tr.appendChild(tdQuest)\n//                     // console.log(tdQuest);\n//                     let tdAns = document.createElement(\"td\")\n//                     let arrAns\n//                     if(test.answers){\n//                     arrAns = test.answers.split(\"$$\");\n//                     }\n//                     for(let i = 0; i<test.numQuest ; i++){\n//                         var x = document.createElement(\"INPUT\");\n//                         x.setAttribute(\"type\", \"radio\");\n//                         x.setAttribute('onChange',this.test1());\n//                         x.setAttribute(\"id\", arrAns[i])\n//                         x.setAttribute(\"name\",test.quest)\n//                         //x.setAttribute(\"name\",\"question number:\"+test.numQuest)\n//                         x.setAttribute(\"value\",i+1)\n//                         var y = document.createElement(\"LABEL\");\n//                         var t = document.createTextNode(arrAns[i]);\n//                         y.setAttribute(\"htmlFor\", arrAns[i]);\n//                         y.appendChild(t);\n//                         tdAns.appendChild(x)\n//                         tdAns.appendChild(y)\n//                     }\n//                     tr.appendChild(tdAns) \n//                     textarray[parseInt(tdQuest.id)]=tr;\n//                     }\n//                 }\n//             );\n//             if(this.state.secs1 && this.state.secs2 && this.state.secs3)\n//                     {\n//                         // console.log(this.state.secs1.length);\n//                         for(let i=this.state.secs1.length;i>0;i--)\n//                         {\n//                             document.getElementById(\"שייכות\").after(textarray[i]);       \n//                         }\n//                         // console.log(this.state.secs2.length+this.state.secs1.length);\n//                         for(let j=(this.state.secs2.length+this.state.secs1.length);j>this.state.secs1.length;j--)\n//                         {\n//                             document.getElementById(\"יאוש\").after(textarray[j]);       \n//                         }\n//                         // console.log(this.state.secs3.length+this.state.secs2.length+this.state.secs1.length);\n//                         for(let m=(this.state.secs3.length+this.state.secs2.length+this.state.secs1.length);m>(this.state.secs2.length+this.state.secs1.length);m--)\n//                         {\n//                             document.getElementById(\"בדידות\").after(textarray[m]);       \n//                         }\n//                     }\n//           });\n// //______________________________this codes get the users from firestore db and creates an email to send to admins\n//             // db.collection('users').get().then((ans) => {\n//             //     ans.forEach(element => {\n//             //         if(element){\n//             //             let subjectslist=\"mailto:\";\n//             //             if(element.data())\n//             //             {\n//             //                 // console.log(element.data());\n//             //                 // console.log(element.data().admins);\n//             //                 element.data().admins.forEach(e=>{\n//             //                 subjectslist+=e;\n//             //                 subjectslist+=\";\"\n//             //                 })\n//             //                 subjectslist+=\"?subject=מענה לשאלות משה\"\n//             //             document.getElementById(\"main_form\").action=subjectslist;\n//             //             }\n//             //         }\n//             //     });\n//             // }\n//             // );\n// //______________this page is loaded after header and it hiererchy is this header,form[tables],footer[admin zone],about\n//             return (\n//         <div id=\"F1\" dir=\"rtl\">\n//         <Card style={{\"padding\": \"1.5%\", \"borderColor\":\"#66CDAA\"}}>\n//         <h1 style={{\"textAlign\":\"center\"}}>שאלון מש\"ה</h1>\n//         {/* <form method=\"method\" action=\"mailto:a@b.c\" encType=\"text/plain\">\n// <input type=\"text\" name=\"subject\" value=\"d e\"/>\n// <input type=\"text\" name=\"body\" value=\"אהבסבהבה\"/>\n//         <button type=\"submit\">k</button>\n//         </form> */}\n//             <form id=\"main_form\" encType=\"text/plain\"> \n//             {/* <form id=\"main_form\" method=\"method\" action=\"mailto:avni@gmail.com\" encType=\"text/plain\">  */}\n//             {/* <input type=\"text\" name=\"subject\" defaultValue=\"תשובות לשאלון משה\"/>\n//             <input id=\"form_body\" type=\"text\" name=\"body\" defaultValue=\"אהבסבהבה\"/> */}\n//             <h4 style={{\"textAlign\":\"center\"}}>במקרים בהם יש סקאלה: 1-5, כאשר 1 מייצג מצב טוב ו-5 מייצג מצב גרוע</h4>\n//             <table id=\"addQuestion\">\n//             <tbody id=\"שייכות\" className=\"pre_titles\"><tr><td>שייכות:</td></tr></tbody>\n//             <tbody id=\"יאוש\"className=\"pre_titles\"><tr><td>יאוש/תקווה:</td></tr></tbody>\n//             <tbody id=\"בדידות\"className=\"pre_titles\"><tr><td>בדידות/ניכור:</td></tr></tbody>\n//             </table>\n//             {/* <hr width=\"300%\"/> */}\n//             {/* <br/> */}\n//             {/* <br/> */}\n//             <button className=\"btn btn-primary\"  onClick={()=>{this.handleSubmit ()}} style = {{\"marginRight\": \"45%\"}}>שלח</button>\n//             </form>\n//             </Card>\n//             {/* <Card style= {{\"marginTop\" : \"55px\",\"borderColor\":\"#66CDAA\" }}>\n//                 <Card.Body>\n//                     <Form>\n//                         <Form.Label className = \"pQ\">הוספת/מחיקה שאלה :</Form.Label>\n//                         <Form.Control id = \"add\" style = {{\"borderColor\":\"#66CDAA\"}}/>\n//                     </Form>\n//                     <Card style = {{\"width\": \"20%\",\"display\": \"inline-block\", \"borderColor\":\"#66CDAA\"}}>\n//                         <Card.Body>\n//                             <Form>\n//                                 <Form.Label className = \"pQ\" >כמה בחירות לשאלה ?</Form.Label>\n//                                 <Form.Control type=\"number\" onChange = {()=>{this.questionNum(document.getElementById(\"numQuest\").value)}} id = \"numQuest\" style = {{\"borderColor\":\"#66CDAA\"}}/>\n//                             </Form>\n//                         </Card.Body>\n//                     </Card>\n//                     <Card style = {{\"width\": \"20%\",\"display\": \"inline-block\", \"borderColor\":\"#66CDAA\"}}>\n//                         <Card.Body>\n//                             <Form>\n//                                 <Form.Label className = \"pQ\" >איזה אזור לשאלה ?</Form.Label>\n//                                 <Form.Control type=\"number\" onChange = {()=>{this.zone(document.getElementById(\"zone\").value)}} id = \"zone\" style = {{\"borderColor\":\"#66CDAA\"}}/>\n//                             </Form>\n//                         </Card.Body>\n//                     </Card>\n//                     <Card style = {{\"marginRight\":\"10%\",\"display\": \"inline-block\",\"width\": \"60%\", \"borderColor\":\"#66CDAA\"}}>\n//                         <Card.Body>\n//                             <Form id =\"plusQ\">\n//                             <Form.Label className = \"pQ\" >תשובות :</Form.Label>\n//                             </Form>\n//                         </Card.Body>\n//                     </Card>\n//                     <Button className = \"w-15\" style= {{\"display\" : \"inline-block\",\"marginRight\" : \"40%\", \"marginTop\" : \"10px\",\"backgroundColor\" : \"#66CDAA\", \"borderColor\":\"#66CDAA\"}} type = \"submit\" \n//                          onClick={()=>{this.writeData(document.getElementById(\"add\").value,document.getElementById(\"numQuest\").value,document.getElementById(\"zone\").value)}}>הוספה</Button>\n//                     <Button className = \"w-15\" style= {{\"display\" : \"inline-block\",\"marginRight\" : \"7%\", \"marginTop\" : \"10px\", \"backgroundColor\" : \"red\", \"borderColor\":\"red\"}} type = \"submit\" \n//                          onClick={()=>{this.suppData(document.getElementById(\"add\").value,document.getElementById(\"numQuest\").value)}}>מחיקה</Button>\n//                 </Card.Body> \n//             </Card>   */}\n//     </div>\n//     )\n//     }\n// }\n// export default FormHook","map":{"version":3,"sources":["C:/Users/Yuval/Documents/GitHub/Project_Mascha/moshe/src/components/Form.js"],"names":[],"mappingssourcesContent":["// import {db} from '../firebase/firebase'\r\n// import React from 'react'\r\n// import {Card} from 'react-bootstrap'\r\n// import \"firebase/firestore\";\r\n// // import { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\r\n\r\n// // const handleSubmit = (e) => {\r\n// //     console.log(e);\r\n// //     e.preventDefault(); // Prevents default refresh by the browser\r\n// //     emailjs.sendForm(`gmail`, apiKey.TEMPLATE_ID, e.target, apiKey.USER_ID)\r\n// //     .then((result) => {\r\n// //     alert(\"Message Sent, We will get back to you shortly\", result.text);\r\n// //     },\r\n// //     (error) => {\r\n// //     alert(\"An error occurred, Please try again\", error.text);\r\n// //     });\r\n// //     };\r\n\r\n// class FormHook extends React.Component{\r\n\r\n//     static numGlo = 0;\r\n    \r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state={\r\n                           \r\n//         }\r\n       \r\n//     }\r\n// //__________________________________________COMMPONENT DID MOUNT______________________________________________\r\n//     async componentDidMount(){\r\n//         let secs1=[]\r\n//         let secs2=[]\r\n//         let secs3=[]\r\n  \r\n       \r\n// try{\r\n//         let forms = await db.collection(\"Forms\").get()\r\n//         let i;\r\n//         let indexarray=[];\r\n//         forms.docs.forEach((form,index) =>{\r\n//             i=parseInt(form.id);\r\n//             indexarray.push(i);\r\n//         //     if(form.data().zone===1)\r\n//         //     {\r\n//         //      secs1.push(form.data())\r\n//         //     }\r\n        \r\n//         //    if(form.data().zone===2)\r\n//         //    {\r\n//         //     secs2.push(form.data())\r\n//         //    }\r\n//         //    if(form.data().zone===3)\r\n//         //    {\r\n//         //     secs3.push(form.data())\r\n//         //    }\r\n//         })\r\n//         indexarray.sort((a,b)=>a-b);\r\n// for(let j=0;j<indexarray.length;j++)\r\n// {   let k=j.toString()\r\n \r\n//     var docRef = db.collection(\"Forms\").doc(k);\r\n\r\n// docRef.get().then((doc) => {\r\n//     if (doc.exists) {\r\n//         switch(doc.data().zone){\r\n//             case 1:\r\n//              secs1.push(doc.data()); break;\r\n//              case 2:\r\n//                  secs2.push(doc.data()); break;\r\n//                  case 3:\r\n//                      secs3.push(doc.data()); break;\r\n//                      default:break;\r\n//          }\r\n// }\r\n// });\r\n    \r\n   \r\n// }\r\n\r\n// this.setState({secs1:secs1,secs2:secs2,secs3:secs3})\r\n// console.log(this.state) \r\n// }\r\n// catch(error){\r\n//     alert(error);\r\n// }\r\n//     }\r\n// //__________________________________________END OF COMPONENT MOUNT_________________________________________\r\n\r\n\r\n\r\n    \r\n// //__________________________________________FUNCTIONS_______________________________________________________\r\n\r\n// //WRITE DATA put the data we get from the add question card and update our firestore db\r\n//     writeData(question,num,zone) {\r\n//         let arrString = \"\";\r\n//         let megaString = \"\";\r\n//         for(let i = 0; i < this.numGlo-1 ; i++){\r\n//             arrString = \"quest\" + i\r\n//             megaString += document.getElementById(arrString).value + \"$$\"\r\n//         }\r\n//         arrString = \"quest\" + (this.numGlo-1)\r\n//         megaString += document.getElementById(arrString).value\r\n     \r\n//         let yuvalquestionnum;\r\n//         db.collection('questionsnum').get().then((ans) => {\r\n//             ans.forEach(element => {\r\n//                 if(element.exists){\r\n//                     yuvalquestionnum=element.data().yuvalquestionnum;\r\n//                     //console.log(yuvalquestionnum);\r\n//                     let d=yuvalquestionnum.toString();\r\n//                     //update the forms\r\n//                     let docnum=parseInt(d);\r\n//                     db.collection(\"Forms\").doc(d).update(\r\n//                         {\r\n//                             quest: question,\r\n//                             numQuest : Number(num),\r\n//                             answers : megaString,\r\n//                             answersstats: [0,0,0,0,0],\r\n//                             questionNumber:Number(docnum),\r\n//                         }\r\n//                     )\r\n//                     //add +1 to question num\r\n//                     db.collection(\"questionsnum\").doc(\"questionsnum\").update(\r\n//                         {\r\n//                           yuvalquestionnum: yuvalquestionnum+1,\r\n//                         }\r\n//                     )\r\n            \r\n//                 }\r\n//             });\r\n//             });\r\n\r\n//         document.getElementById(\"plusQ\").innerHTML = \"\";\r\n//         document.getElementById(\"numQuest\").value = \"\";\r\n//         document.getElementById(\"add\").value = \"\";\r\n//         alert(\"נוספה שאלה !\")\r\n//     }\r\n\r\n\r\n//   //SUPP DATA removes a question from our firestore db  \r\n//     suppData(question,num){\r\n        \r\n//         //console.log(question)\r\n//         // //console.log(num)\r\n//         db.collection('Forms').get().then((ans) => {\r\n//             ans.forEach(element => {\r\n//                 if(element.exists){\r\n//                     if(element.data().quest === question && element.data().numQuest === num)\r\n//                         db.collection('Forms').doc(element.id).delete();\r\n//                 }\r\n//             })\r\n//         })\r\n\r\n//         document.getElementById(\"plusQ\").innerHTML = \"\";\r\n//         document.getElementById(\"numQuest\").value = \"\";\r\n//         document.getElementById(\"add\").value = \"\";\r\n//         alert(\"שאלה נמחקה !\")\r\n\r\n//     }\r\n// //QUESTION NUM is a helper funtion to get a name (quest-i) that only exist for our current question\r\n//     questionNum(num){\r\n\r\n//         let formC;\r\n//         let clasString;\r\n//         document.getElementById('plusQ').innerHTML = \"\";\r\n//         this.numGlo = num\r\n//         this.yuvalquestionnum++;\r\n//         for(let i = 0 ; i < num ; i++)\r\n//         {\r\n//             formC = document.createElement(\"input\");\r\n//             clasString = \"quest\" + i;\r\n//             formC.setAttribute(\"id\", clasString)\r\n//             document.getElementById(\"plusQ\").appendChild(formC)\r\n//         }\r\n//     }\r\n\r\n//     test1()\r\n//     {\r\n//       //  console.log('in')\r\n//     }\r\n\r\n// //SUBMIT FORM CLICKED is called when the submit button was clicked.\r\n// //it updates the firestore so the stat page will be ready for next read\r\n//     submitformclicked(){\r\n        \r\n\r\n\r\n//         // adding +1 to the answer given by the form\r\n//         db.collection('Forms').get().then((ans)=>{\r\n//             ans.forEach(element=>{\r\n//                 if(element.exists)\r\n//                 {\r\n//                     //put in number the current question\r\n                    \r\n//                     let currentquestion=element.id.toString();\r\n//                     // console.log(currentquestion);\r\n//                     // console.log(element.data().quest);\r\n//                     //split the answers\r\n//                     let answeroptions\r\n//                     if(element.data().answers)\r\n//                     {\r\n//                          answeroptions=element.data().answers.split(\"$$\");\r\n//                         }\r\n//                         // console.log(answeroptions);                \r\n//                     //get the stats already in firestore\r\n//                     let x0,x1,x2,x3,x4;\r\n//                     // console.log(element.data().answersstats);\r\n//                     if(element.data().answersstats)\r\n//                     {\r\n//                         x0=parseInt(element.data().answersstats[0]);\r\n                        \r\n//                         x1=parseInt(element.data().answersstats[1]);\r\n                        \r\n//                         x2=parseInt(element.data().answersstats[2]);\r\n                        \r\n//                         x3=parseInt(element.data().answersstats[3]);\r\n                        \r\n//                         x4=parseInt(element.data().answersstats[4]);\r\n//                     }\r\n//                     // console.log(x0,x1,x2,x3,x4);\r\n                    \r\n//                     //find the picked answer from the form\r\n//                    for(let answer in answeroptions)\r\n//                    {\r\n//                     // console.log(answer);   \r\n//                     // console.log(answeroptions[answer]);\r\n//                     var k=document.getElementById(answeroptions[answer]);\r\n                    \r\n//                     if(k && k.checked)\r\n//                     {\r\n//                          console.log(k);\r\n//                         let place=parseInt(k.value)-1;\r\n//                         console.log(place);\r\n//                     //change the correct stat\r\n                    \r\n//                 //     if(place===0)\r\n//                 //     {\r\n//                 //         db.collection(\"Forms\").doc(currentquestion).update({\r\n//                 //         answersstats:[Number(x0+1),Number(x1),Number(x2),Number(x3),Number(x4)],\r\n//                 //     },{ merge: true });}\r\n//                 //     if(place===1)\r\n//                 //    { db.collection(\"Forms\").doc(currentquestion).update({\r\n//                 //         answersstats:[Number(x0),Number(x1+1),Number(x2),Number(x3),Number(x4)],\r\n//                 //     },{ merge: true });}\r\n//                 //     if(place===2)\r\n//                 //     {db.collection(\"Forms\").doc(currentquestion).update({\r\n//                 //         answersstats:[Number(x0),Number(x1),Number(x2+1),Number(x3),Number(x4)],\r\n//                 //     },{ merge: true });}\r\n//                 //     if(place===3)\r\n//                 //    { db.collection(\"Forms\").doc(currentquestion).update({\r\n//                 //         answersstats:[Number(x0),Number(x1),Number(x2),Number(x3+1),Number(x4)],\r\n//                 //     },{ merge: true });}\r\n//                 //     if(place===4)\r\n//                 //    { db.collection(\"Forms\").doc(currentquestion).update({\r\n//                 //         answersstats:[Number(x0),Number(x1),Number(x2),Number(x3),Number(x4+1)],\r\n//                 //     },{ merge: true });}\r\n                        \r\n//                     // //to make sure we dont go over same answer twcie\r\n//                     // k.checked=false;\r\n//                     // console.log(element.data());\r\n//                     }\r\n\r\n\r\n//                    }\r\n            \r\n//                     //put it back in firestore\r\n//                 }\r\n\r\n//             });\r\n        \r\n//         });\r\n        \r\n\r\n//     }\r\n// //____________________render happens after commponent did mount in order to load the page_____________________    \r\n//     render(){\r\n      \r\n//  //_____________________________the following code gets the questions from the db,\r\n//  //_____________________________builds an html tr for that question,\r\n//  //_____________________________check based on the secs where that question needs to go in the page and sends \r\n//         let textarray=Array(100);\r\n//             db.collection('Forms').get().then((ans) => {\r\n//             ans.forEach(element => {\r\n//                 if(element.exists){\r\n\r\n//                     let test = element.data()\r\n//                     let tr = document.createElement('tr')\r\n//                     let tdQuest = document.createElement('td')\r\n//                     tdQuest.classList.add(\"pQ\");\r\n//                     tdQuest.id=parseInt(element.id);\r\n\r\n                  \r\n\r\n//                     tdQuest.textContent = test.quest\r\n//                     tr.appendChild(tdQuest)\r\n//                     // console.log(tdQuest);\r\n//                     let tdAns = document.createElement(\"td\")\r\n//                     let arrAns\r\n//                     if(test.answers){\r\n//                     arrAns = test.answers.split(\"$$\");\r\n//                     }\r\n//                     for(let i = 0; i<test.numQuest ; i++){\r\n\r\n//                         var x = document.createElement(\"INPUT\");\r\n//                         x.setAttribute(\"type\", \"radio\");\r\n//                         x.setAttribute('onChange',this.test1());\r\n//                         x.setAttribute(\"id\", arrAns[i])\r\n//                         x.setAttribute(\"name\",test.quest)\r\n//                         //x.setAttribute(\"name\",\"question number:\"+test.numQuest)\r\n//                         x.setAttribute(\"value\",i+1)\r\n                        \r\n//                         var y = document.createElement(\"LABEL\");\r\n//                         var t = document.createTextNode(arrAns[i]);\r\n//                         y.setAttribute(\"htmlFor\", arrAns[i]);\r\n//                         y.appendChild(t);\r\n//                         tdAns.appendChild(x)\r\n//                         tdAns.appendChild(y)\r\n                        \r\n//                     }\r\n//                     tr.appendChild(tdAns) \r\n                    \r\n//                     textarray[parseInt(tdQuest.id)]=tr;\r\n//                     }\r\n                    \r\n//                 }\r\n//             );\r\n//             if(this.state.secs1 && this.state.secs2 && this.state.secs3)\r\n//                     {\r\n//                         // console.log(this.state.secs1.length);\r\n//                         for(let i=this.state.secs1.length;i>0;i--)\r\n//                         {\r\n//                             document.getElementById(\"שייכות\").after(textarray[i]);       \r\n//                         }\r\n//                         // console.log(this.state.secs2.length+this.state.secs1.length);\r\n//                         for(let j=(this.state.secs2.length+this.state.secs1.length);j>this.state.secs1.length;j--)\r\n//                         {\r\n//                             document.getElementById(\"יאוש\").after(textarray[j]);       \r\n//                         }\r\n//                         // console.log(this.state.secs3.length+this.state.secs2.length+this.state.secs1.length);\r\n//                         for(let m=(this.state.secs3.length+this.state.secs2.length+this.state.secs1.length);m>(this.state.secs2.length+this.state.secs1.length);m--)\r\n//                         {\r\n//                             document.getElementById(\"בדידות\").after(textarray[m]);       \r\n//                         }\r\n                       \r\n//                     }\r\n//           });\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //______________________________this codes get the users from firestore db and creates an email to send to admins\r\n//             // db.collection('users').get().then((ans) => {\r\n//             //     ans.forEach(element => {\r\n//             //         if(element){\r\n//             //             let subjectslist=\"mailto:\";\r\n                        \r\n//             //             if(element.data())\r\n//             //             {\r\n//             //                 // console.log(element.data());\r\n//             //                 // console.log(element.data().admins);\r\n//             //                 element.data().admins.forEach(e=>{\r\n//             //                 subjectslist+=e;\r\n//             //                 subjectslist+=\";\"\r\n//             //                 })\r\n                \r\n//             //                 subjectslist+=\"?subject=מענה לשאלות משה\"\r\n//             //             document.getElementById(\"main_form\").action=subjectslist;\r\n                       \r\n                          \r\n                    \r\n//             //             }\r\n//             //         }\r\n//             //     });\r\n//             // }\r\n//             // );\r\n   \r\n            \r\n   \r\n// //______________this page is loaded after header and it hiererchy is this header,form[tables],footer[admin zone],about\r\n   \r\n//             return (\r\n        \r\n        \r\n//         <div id=\"F1\" dir=\"rtl\">\r\n//         <Card style={{\"padding\": \"1.5%\", \"borderColor\":\"#66CDAA\"}}>\r\n//         <h1 style={{\"textAlign\":\"center\"}}>שאלון מש\"ה</h1>\r\n\r\n//         {/* <form method=\"method\" action=\"mailto:a@b.c\" encType=\"text/plain\">\r\n// <input type=\"text\" name=\"subject\" value=\"d e\"/>\r\n// <input type=\"text\" name=\"body\" value=\"אהבסבהבה\"/>\r\n//         <button type=\"submit\">k</button>\r\n//         </form> */}\r\n//             <form id=\"main_form\" encType=\"text/plain\"> \r\n            \r\n            \r\n//             {/* <form id=\"main_form\" method=\"method\" action=\"mailto:avni@gmail.com\" encType=\"text/plain\">  */}\r\n//             {/* <input type=\"text\" name=\"subject\" defaultValue=\"תשובות לשאלון משה\"/>\r\n//             <input id=\"form_body\" type=\"text\" name=\"body\" defaultValue=\"אהבסבהבה\"/> */}\r\n\r\n\r\n\r\n//             <h4 style={{\"textAlign\":\"center\"}}>במקרים בהם יש סקאלה: 1-5, כאשר 1 מייצג מצב טוב ו-5 מייצג מצב גרוע</h4>\r\n            \r\n            \r\n            \r\n//             <table id=\"addQuestion\">\r\n//             <tbody id=\"שייכות\" className=\"pre_titles\"><tr><td>שייכות:</td></tr></tbody>\r\n//             <tbody id=\"יאוש\"className=\"pre_titles\"><tr><td>יאוש/תקווה:</td></tr></tbody>\r\n//             <tbody id=\"בדידות\"className=\"pre_titles\"><tr><td>בדידות/ניכור:</td></tr></tbody>\r\n//             </table>\r\n//             {/* <hr width=\"300%\"/> */}\r\n//             {/* <br/> */}\r\n\r\n\r\n//             {/* <br/> */}\r\n//             <button className=\"btn btn-primary\"  onClick={()=>{this.handleSubmit ()}} style = {{\"marginRight\": \"45%\"}}>שלח</button>\r\n//             </form>\r\n//             </Card>\r\n\r\n//             {/* <Card style= {{\"marginTop\" : \"55px\",\"borderColor\":\"#66CDAA\" }}>\r\n//                 <Card.Body>\r\n\r\n//                     <Form>\r\n//                         <Form.Label className = \"pQ\">הוספת/מחיקה שאלה :</Form.Label>\r\n//                         <Form.Control id = \"add\" style = {{\"borderColor\":\"#66CDAA\"}}/>\r\n//                     </Form>\r\n    \r\n//                     <Card style = {{\"width\": \"20%\",\"display\": \"inline-block\", \"borderColor\":\"#66CDAA\"}}>\r\n//                         <Card.Body>\r\n//                             <Form>\r\n//                                 <Form.Label className = \"pQ\" >כמה בחירות לשאלה ?</Form.Label>\r\n//                                 <Form.Control type=\"number\" onChange = {()=>{this.questionNum(document.getElementById(\"numQuest\").value)}} id = \"numQuest\" style = {{\"borderColor\":\"#66CDAA\"}}/>\r\n//                             </Form>\r\n//                         </Card.Body>\r\n//                     </Card>\r\n//                     <Card style = {{\"width\": \"20%\",\"display\": \"inline-block\", \"borderColor\":\"#66CDAA\"}}>\r\n                       \r\n//                         <Card.Body>\r\n//                             <Form>\r\n//                                 <Form.Label className = \"pQ\" >איזה אזור לשאלה ?</Form.Label>\r\n//                                 <Form.Control type=\"number\" onChange = {()=>{this.zone(document.getElementById(\"zone\").value)}} id = \"zone\" style = {{\"borderColor\":\"#66CDAA\"}}/>\r\n//                             </Form>\r\n//                         </Card.Body>\r\n//                     </Card>\r\n                    \r\n//                     <Card style = {{\"marginRight\":\"10%\",\"display\": \"inline-block\",\"width\": \"60%\", \"borderColor\":\"#66CDAA\"}}>\r\n//                         <Card.Body>\r\n//                             <Form id =\"plusQ\">\r\n//                             <Form.Label className = \"pQ\" >תשובות :</Form.Label>\r\n\r\n//                             </Form>\r\n//                         </Card.Body>\r\n//                     </Card>\r\n\r\n//                     <Button className = \"w-15\" style= {{\"display\" : \"inline-block\",\"marginRight\" : \"40%\", \"marginTop\" : \"10px\",\"backgroundColor\" : \"#66CDAA\", \"borderColor\":\"#66CDAA\"}} type = \"submit\" \r\n//                          onClick={()=>{this.writeData(document.getElementById(\"add\").value,document.getElementById(\"numQuest\").value,document.getElementById(\"zone\").value)}}>הוספה</Button>\r\n//                     <Button className = \"w-15\" style= {{\"display\" : \"inline-block\",\"marginRight\" : \"7%\", \"marginTop\" : \"10px\", \"backgroundColor\" : \"red\", \"borderColor\":\"red\"}} type = \"submit\" \r\n//                          onClick={()=>{this.suppData(document.getElementById(\"add\").value,document.getElementById(\"numQuest\").value)}}>מחיקה</Button>\r\n\r\n//                 </Card.Body> \r\n//             </Card>   */}\r\n            \r\n//     </div>\r\n    \r\n//     )\r\n//     }\r\n// }\r\n\r\n// export default FormHook"]},"metadata":{},"sourceType":"module"}