[{"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\index.js":"1","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\App.js":"2","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\reportWebVitals.js":"3","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Header.js":"4","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Footer.js":"5","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\About.js":"6","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Login.js":"7","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\SignIn.js":"8","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\areyousure.js":"9","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Form.js":"10","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\ForgotPassword.js":"11","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\newForm.js":"12","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Statistics.js":"13","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\createQuest.js":"14","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\emailkey.js":"15","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\contactForm.js":"16","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\firebase\\firebase.js":"17"},{"size":519,"mtime":1623264320734,"results":"18","hashOfConfig":"19"},{"size":1149,"mtime":1623438976476,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1623264320736,"results":"21","hashOfConfig":"19"},{"size":626,"mtime":1623264320725,"results":"22","hashOfConfig":"19"},{"size":4119,"mtime":1623432731697,"results":"23","hashOfConfig":"19"},{"size":521,"mtime":1623264320728,"results":"24","hashOfConfig":"19"},{"size":2202,"mtime":1623264320730,"results":"25","hashOfConfig":"19"},{"size":3871,"mtime":1623433349629,"results":"26","hashOfConfig":"19"},{"size":1513,"mtime":1623264320726,"results":"27","hashOfConfig":"19"},{"size":18514,"mtime":1623286941973,"results":"28","hashOfConfig":"19"},{"size":1337,"mtime":1623264320727,"results":"29","hashOfConfig":"19"},{"size":14382,"mtime":1623437735377,"results":"30","hashOfConfig":"19"},{"size":13759,"mtime":1623437554004,"results":"31","hashOfConfig":"19"},{"size":9153,"mtime":1623397455500,"results":"32","hashOfConfig":"19"},{"size":571,"mtime":1623287125192,"results":"33","hashOfConfig":"19"},{"size":1804,"mtime":1623288568689,"results":"34","hashOfConfig":"19"},{"size":621,"mtime":1623264993510,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1noyzpa",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\index.js",[],["76","77"],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\App.js",["78"],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\reportWebVitals.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Header.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Footer.js",["79","80"],"import { Route } from 'react-router-dom'\r\nimport { Button,Card,Form} from 'react-bootstrap'\r\n\r\nimport React from 'react'\r\nimport firebase from \"firebase/app\";\r\nimport {db} from '../firebase/firebase'\r\nclass Footer extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        // console.log(\"+\");\r\n        // console.log(user);\r\n\r\n        var x = document.getElementById('signinbtn');\r\n        var y = document.getElementById('addquestionbtn');\r\n        if (x)\r\n{\r\n  db.collection('users').get().then((ans) => {\r\n    console.log(ans);\r\n    ans.forEach(element => {\r\n      if(element){\r\n        console.log(element);\r\n        if(element.data()){\r\n          console.log(element.data());\r\n          if(element.data().admins)\r\n          {\r\n            console.log(element.data().admins);\r\n            console.log(user.email);\r\n            console.log(element.data().admins.includes(user.email));\r\n\r\n            if(element.data().admins.includes(user.email))\r\n            {\r\n                       x.classList.remove(\"disabled\");\r\n                       x.disabled = false;\r\n                       x.hidden=false;\r\n                       console.log(\"user status is admin\");\r\n            }\r\n            else            {\r\n                      x.classList.add(\"disabled\");\r\n                      x.disabled = true;\r\n                      x.hidden=true;\r\n                      console.log(\"user status is not admin\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n      }\r\n      if (y)\r\n      {\r\n        db.collection('users').get().then((ans) => {\r\n          console.log(ans);\r\n          ans.forEach(element => {\r\n            if(element){\r\n              console.log(element);\r\n              if(element.data()){\r\n                console.log(element.data());\r\n                if(element.data().admins)\r\n                {\r\n                  console.log(element.data().admins);\r\n                  console.log(user.email);\r\n                  console.log(element.data().admins.includes(user.email));\r\n      \r\n                  if(element.data().admins.includes(user.email))\r\n                  {\r\n                             y.classList.remove(\"disabled\");\r\n                             y.disabled = false;\r\n                             y.hidden=false;\r\n                             console.log(\"user status is admin\");\r\n                  }\r\n                  else            {\r\n                            y.classList.add(\"disabled\");\r\n                            y.disabled = true;\r\n                            y.hidden=true;\r\n                            console.log(\"user status is not admin\");\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          });\r\n        });\r\n      \r\n            }\r\n\r\n    }//no user\r\n    else{\r\n      // console.log(\"-\");\r\n    }\r\n\r\n\r\n\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  showcard()\r\n  {\r\n   let mycard=document.getElementById(\"card_add_div\")\r\n    mycard.classList.remove(\"card_add_disabled\");\r\n    mycard.classList.add(\"card_add_enabled\");\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div>\r\n        <footer>\r\n\r\n          <a href='/about'><Button className=\"w-20\" id=\"spa\">אודותנו</Button></a>\r\n\r\n          <br></br>\r\n          <Route exact path=\"/\" render={() => <a href='/login'><Button className='w-20' style ={{\"marginTop\":\"10px\"}}>התחברות</Button></a>} />\r\n          <br></br>\r\n\r\n          <Route exact path=\"/form\" render={() =>\r\n            <a href='/areyousure'><Button id=\"deleteuserbtn\" className='btn'>מחק משתמש זה</Button></a>} />\r\n\r\n          <br></br><br></br>\r\n          <Route exact path=\"/form\" render={() =>\r\n            <a href='/SignIn'><Button id=\"signinbtn\" disabled>צור משתמש</Button></a>}\r\n            />\r\n           <br></br><br></br>\r\n         \r\n          <p>Copyright &copy; 2021</p>\r\n          <Route exact path=\"/SignIn\" render={() =>\r\n\r\n            <a href='/signin/statistics'><Button id=\"statistics\">דף סטטיסטיקה</Button></a>} />\r\n\r\n        </footer>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\About.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Login.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\SignIn.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\areyousure.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Form.js",["81","82","83","84","85","86"],"import {db} from '../firebase/firebase'\r\nimport React from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport \"firebase/firestore\";\r\n// import { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\r\n\r\n// const handleSubmit = (e) => {\r\n//     console.log(e);\r\n//     e.preventDefault(); // Prevents default refresh by the browser\r\n//     emailjs.sendForm(`gmail`, apiKey.TEMPLATE_ID, e.target, apiKey.USER_ID)\r\n//     .then((result) => {\r\n//     alert(\"Message Sent, We will get back to you shortly\", result.text);\r\n//     },\r\n//     (error) => {\r\n//     alert(\"An error occurred, Please try again\", error.text);\r\n//     });\r\n//     };\r\n\r\nclass FormHook extends React.Component{\r\n\r\n    static numGlo = 0;\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n\r\n        }\r\n\r\n    }\r\n//__________________________________________COMMPONENT DID MOUNT______________________________________________\r\n    async componentDidMount(){\r\n        let secs1=[]\r\n        let secs2=[]\r\n        let secs3=[]\r\n\r\n\r\ntry{\r\n        let forms = await db.collection(\"Forms\").get()\r\n        let i;\r\n        let indexarray=[];\r\n        forms.docs.forEach((form,index) =>{\r\n            i=parseInt(form.id);\r\n            indexarray.push(i);\r\n        //     if(form.data().zone===1)\r\n        //     {\r\n        //      secs1.push(form.data())\r\n        //     }\r\n\r\n        //    if(form.data().zone===2)\r\n        //    {\r\n        //     secs2.push(form.data())\r\n        //    }\r\n        //    if(form.data().zone===3)\r\n        //    {\r\n        //     secs3.push(form.data())\r\n        //    }\r\n        })\r\n        indexarray.sort((a,b)=>a-b);\r\nfor(let j=0;j<indexarray.length;j++)\r\n{   let k=j.toString()\r\n\r\n    var docRef = db.collection(\"Forms\").doc(k);\r\n\r\ndocRef.get().then((doc) => {\r\n    if (doc.exists) {\r\n        switch(doc.data().zone){\r\n            case 1:\r\n             secs1.push(doc.data()); break;\r\n             case 2:\r\n                 secs2.push(doc.data()); break;\r\n                 case 3:\r\n                     secs3.push(doc.data()); break;\r\n                     default:break;\r\n         }\r\n}\r\n});\r\n\r\n\r\n}\r\n\r\nthis.setState({secs1:secs1,secs2:secs2,secs3:secs3})\r\nconsole.log(this.state)\r\n}\r\ncatch(error){\r\n    alert(error);\r\n}\r\n    }\r\n//__________________________________________END OF COMPONENT MOUNT_________________________________________\r\n\r\n\r\n\r\n\r\n//__________________________________________FUNCTIONS_______________________________________________________\r\n\r\n//WRITE DATA put the data we get from the add question card and update our firestore db\r\n    writeData(question,num,zone) {\r\n        let arrString = \"\";\r\n        let megaString = \"\";\r\n        for(let i = 0; i < this.numGlo-1 ; i++){\r\n            arrString = \"quest\" + i\r\n            megaString += document.getElementById(arrString).value + \"$$\"\r\n        }\r\n        arrString = \"quest\" + (this.numGlo-1)\r\n        megaString += document.getElementById(arrString).value\r\n\r\n        let yuvalquestionnum;\r\n        db.collection('questionsnum').get().then((ans) => {\r\n            ans.forEach(element => {\r\n                if(element.exists){\r\n                    yuvalquestionnum=element.data().yuvalquestionnum;\r\n                    //console.log(yuvalquestionnum);\r\n                    let d=yuvalquestionnum.toString();\r\n                    //update the forms\r\n                    let docnum=parseInt(d);\r\n                    db.collection(\"Forms\").doc(d).update(\r\n                        {\r\n                            quest: question,\r\n                            numQuest : Number(num),\r\n                            answers : megaString,\r\n                            answersstats: [0,0,0,0,0],\r\n                            questionNumber:Number(docnum),\r\n                        }\r\n                    )\r\n                    //add +1 to question num\r\n                    db.collection(\"questionsnum\").doc(\"questionsnum\").update(\r\n                        {\r\n                          yuvalquestionnum: yuvalquestionnum+1,\r\n                        }\r\n                    )\r\n\r\n                }\r\n            });\r\n            });\r\n\r\n        document.getElementById(\"plusQ\").innerHTML = \"\";\r\n        document.getElementById(\"numQuest\").value = \"\";\r\n        document.getElementById(\"add\").value = \"\";\r\n        alert(\"נוספה שאלה !\")\r\n    }\r\n\r\n\r\n  //SUPP DATA removes a question from our firestore db\r\n    suppData(question,num){\r\n\r\n        //console.log(question)\r\n        // //console.log(num)\r\n        db.collection('Forms').get().then((ans) => {\r\n            ans.forEach(element => {\r\n                if(element.exists){\r\n                    if(element.data().quest === question && element.data().numQuest === num)\r\n                        db.collection('Forms').doc(element.id).delete();\r\n                }\r\n            })\r\n        })\r\n\r\n        document.getElementById(\"plusQ\").innerHTML = \"\";\r\n        document.getElementById(\"numQuest\").value = \"\";\r\n        document.getElementById(\"add\").value = \"\";\r\n        alert(\"שאלה נמחקה !\")\r\n\r\n    }\r\n//QUESTION NUM is a helper funtion to get a name (quest-i) that only exist for our current question\r\n    questionNum(num){\r\n\r\n        let formC;\r\n        let clasString;\r\n        document.getElementById('plusQ').innerHTML = \"\";\r\n        this.numGlo = num\r\n        this.yuvalquestionnum++;\r\n        for(let i = 0 ; i < num ; i++)\r\n        {\r\n            formC = document.createElement(\"input\");\r\n            clasString = \"quest\" + i;\r\n            formC.setAttribute(\"id\", clasString)\r\n            document.getElementById(\"plusQ\").appendChild(formC)\r\n        }\r\n    }\r\n\r\n    test1(e)\r\n    {\r\n       console.log('in')\r\n    }\r\n\r\n//SUBMIT FORM CLICKED is called when the submit button was clicked.\r\n//it updates the firestore so the stat page will be ready for next read\r\n    submitformclicked(){\r\n\r\n\r\n\r\n        // adding +1 to the answer given by the form\r\n        db.collection('Forms').get().then((ans)=>{\r\n            ans.forEach(element=>{\r\n                if(element.exists)\r\n                {\r\n                    //put in number the current question\r\n\r\n                    let currentquestion=element.id.toString();\r\n                    // console.log(currentquestion);\r\n                    // console.log(element.data().quest);\r\n                    //split the answers\r\n                    let answeroptions\r\n                    if(element.data().answers)\r\n                    {\r\n                         answeroptions=element.data().answers.split(\"$$\");\r\n                        }\r\n                        // console.log(answeroptions);\r\n                    //get the stats already in firestore\r\n                    let x0,x1,x2,x3,x4;\r\n                    // console.log(element.data().answersstats);\r\n                    if(element.data().answersstats)\r\n                    {\r\n                        x0=parseInt(element.data().answersstats[0]);\r\n\r\n                        x1=parseInt(element.data().answersstats[1]);\r\n\r\n                        x2=parseInt(element.data().answersstats[2]);\r\n\r\n                        x3=parseInt(element.data().answersstats[3]);\r\n\r\n                        x4=parseInt(element.data().answersstats[4]);\r\n                    }\r\n                    // console.log(x0,x1,x2,x3,x4);\r\n\r\n                    //find the picked answer from the form\r\n                   for(let answer in answeroptions)\r\n                   {\r\n                    // console.log(answer);\r\n                    // console.log(answeroptions[answer]);\r\n                    var k=document.getElementById(answeroptions[answer]);\r\n\r\n                    if(k && k.checked)\r\n                    {\r\n                         console.log(k);\r\n                        let place=parseInt(k.value)-1;\r\n                        console.log(place);\r\n                    //change the correct stat\r\n\r\n                //     if(place===0)\r\n                //     {\r\n                //         db.collection(\"Forms\").doc(currentquestion).update({\r\n                //         answersstats:[Number(x0+1),Number(x1),Number(x2),Number(x3),Number(x4)],\r\n                //     },{ merge: true });}\r\n                //     if(place===1)\r\n                //    { db.collection(\"Forms\").doc(currentquestion).update({\r\n                //         answersstats:[Number(x0),Number(x1+1),Number(x2),Number(x3),Number(x4)],\r\n                //     },{ merge: true });}\r\n                //     if(place===2)\r\n                //     {db.collection(\"Forms\").doc(currentquestion).update({\r\n                //         answersstats:[Number(x0),Number(x1),Number(x2+1),Number(x3),Number(x4)],\r\n                //     },{ merge: true });}\r\n                //     if(place===3)\r\n                //    { db.collection(\"Forms\").doc(currentquestion).update({\r\n                //         answersstats:[Number(x0),Number(x1),Number(x2),Number(x3+1),Number(x4)],\r\n                //     },{ merge: true });}\r\n                //     if(place===4)\r\n                //    { db.collection(\"Forms\").doc(currentquestion).update({\r\n                //         answersstats:[Number(x0),Number(x1),Number(x2),Number(x3),Number(x4+1)],\r\n                //     },{ merge: true });}\r\n\r\n                    // //to make sure we dont go over same answer twcie\r\n                    // k.checked=false;\r\n                    // console.log(element.data());\r\n                    }\r\n\r\n\r\n                   }\r\n\r\n                    //put it back in firestore\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n//____________________render happens after commponent did mount in order to load the page_____________________\r\n    render(){\r\n\r\n //_____________________________the following code gets the questions from the db,\r\n //_____________________________builds an html tr for that question,\r\n //_____________________________check based on the secs where that question needs to go in the page and sends\r\n        let textarray=Array(100);\r\n            db.collection('Forms').get().then((ans) => {\r\n            ans.forEach(element => {\r\n                if(element.exists){\r\n\r\n                    let test = element.data()\r\n                    let tr = document.createElement('tr')\r\n                    let tdQuest = document.createElement('td')\r\n                    tdQuest.classList.add(\"pQ\");\r\n                    tdQuest.id=parseInt(element.id);\r\n\r\n\r\n\r\n                    tdQuest.textContent = test.quest\r\n                    tr.appendChild(tdQuest)\r\n                    // console.log(tdQuest);\r\n                    let tdAns = document.createElement(\"td\")\r\n                    let arrAns\r\n                    if(test.answers){\r\n                    arrAns = test.answers.split(\"$$\");\r\n                    }\r\n                    for(let i = 0; i<test.numQuest ; i++){\r\n\r\n                        var x = document.createElement(\"INPUT\");\r\n                        x.setAttribute(\"type\", \"radio\");\r\n                        x.setAttribute('onChange',this.test1());\r\n                        x.setAttribute(\"id\", arrAns[i])\r\n                        x.setAttribute(\"name\",test.quest)\r\n                        //x.setAttribute(\"name\",\"question number:\"+test.numQuest)\r\n                        x.setAttribute(\"value\",i+1)\r\n\r\n                        var y = document.createElement(\"LABEL\");\r\n                        var t = document.createTextNode(arrAns[i]);\r\n                        y.setAttribute(\"htmlFor\", arrAns[i]);\r\n                        y.appendChild(t);\r\n                        tdAns.appendChild(x)\r\n                        tdAns.appendChild(y)\r\n\r\n                    }\r\n                    tr.appendChild(tdAns)\r\n\r\n                    textarray[parseInt(tdQuest.id)]=tr;\r\n                    }\r\n\r\n                }\r\n            );\r\n            if(this.state.secs1 && this.state.secs2 && this.state.secs3)\r\n                    {\r\n                        // console.log(this.state.secs1.length);\r\n                        for(let i=this.state.secs1.length;i>0;i--)\r\n                        {\r\n                            document.getElementById(\"שייכות\").after(textarray[i]);\r\n                        }\r\n                        // console.log(this.state.secs2.length+this.state.secs1.length);\r\n                        for(let j=(this.state.secs2.length+this.state.secs1.length);j>this.state.secs1.length;j--)\r\n                        {\r\n                            document.getElementById(\"יאוש\").after(textarray[j]);\r\n                        }\r\n                        // console.log(this.state.secs3.length+this.state.secs2.length+this.state.secs1.length);\r\n                        for(let m=(this.state.secs3.length+this.state.secs2.length+this.state.secs1.length);m>(this.state.secs2.length+this.state.secs1.length);m--)\r\n                        {\r\n                            document.getElementById(\"בדידות\").after(textarray[m]);\r\n                        }\r\n\r\n                    }\r\n          });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//______________________________this codes get the users from firestore db and creates an email to send to admins\r\n            // db.collection('users').get().then((ans) => {\r\n            //     ans.forEach(element => {\r\n            //         if(element){\r\n            //             let subjectslist=\"mailto:\";\r\n\r\n            //             if(element.data())\r\n            //             {\r\n            //                 // console.log(element.data());\r\n            //                 // console.log(element.data().admins);\r\n            //                 element.data().admins.forEach(e=>{\r\n            //                 subjectslist+=e;\r\n            //                 subjectslist+=\";\"\r\n            //                 })\r\n\r\n            //                 subjectslist+=\"?subject=מענה לשאלות משה\"\r\n            //             document.getElementById(\"main_form\").action=subjectslist;\r\n\r\n\r\n\r\n            //             }\r\n            //         }\r\n            //     });\r\n            // }\r\n            // );\r\n\r\n\r\n\r\n//______________this page is loaded after header and it hiererchy is this header,form[tables],footer[admin zone],about\r\n\r\n            return (\r\n\r\n\r\n        <div id=\"F1\" dir=\"rtl\">\r\n        <Card style={{\"padding\": \"1.5%\", \"borderColor\":\"#66CDAA\"}}>\r\n        <h1 style={{\"textAlign\":\"center\"}}>שאלון מש\"ה</h1>\r\n\r\n        {/* <form method=\"method\" action=\"mailto:a@b.c\" encType=\"text/plain\">\r\n<input type=\"text\" name=\"subject\" value=\"d e\"/>\r\n<input type=\"text\" name=\"body\" value=\"אהבסבהבה\"/>\r\n        <button type=\"submit\">k</button>\r\n        </form> */}\r\n            <form id=\"main_form\" encType=\"text/plain\">\r\n\r\n\r\n            {/* <form id=\"main_form\" method=\"method\" action=\"mailto:avni@gmail.com\" encType=\"text/plain\">  */}\r\n            {/* <input type=\"text\" name=\"subject\" defaultValue=\"תשובות לשאלון משה\"/>\r\n            <input id=\"form_body\" type=\"text\" name=\"body\" defaultValue=\"אהבסבהבה\"/> */}\r\n\r\n\r\n\r\n            <h4 style={{\"textAlign\":\"center\"}}>במקרים בהם יש סקאלה: 1-5, כאשר 1 מייצג מצב טוב ו-5 מייצג מצב גרוע</h4>\r\n\r\n\r\n\r\n            <table id=\"addQuestion\">\r\n            <tbody id=\"שייכות\" className=\"pre_titles\"><tr><td>שייכות:</td></tr></tbody>\r\n            <tbody id=\"יאוש\"className=\"pre_titles\"><tr><td>יאוש/תקווה:</td></tr></tbody>\r\n            <tbody id=\"בדידות\"className=\"pre_titles\"><tr><td>בדידות/ניכור:</td></tr></tbody>\r\n            </table>\r\n            {/* <hr width=\"300%\"/> */}\r\n            {/* <br/> */}\r\n\r\n\r\n            {/* <br/> */}\r\n            <button className=\"btn btn-primary\"  onClick={()=>{this.handleSubmit ()}} style = {{\"marginRight\": \"45%\"}}>שלח</button>\r\n            </form>\r\n            </Card>\r\n\r\n            {/* <Card style= {{\"marginTop\" : \"55px\",\"borderColor\":\"#66CDAA\" }}>\r\n                <Card.Body>\r\n\r\n                    <Form>\r\n                        <Form.Label className = \"pQ\">הוספת/מחיקה שאלה :</Form.Label>\r\n                        <Form.Control id = \"add\" style = {{\"borderColor\":\"#66CDAA\"}}/>\r\n                    </Form>\r\n\r\n                    <Card style = {{\"width\": \"20%\",\"display\": \"inline-block\", \"borderColor\":\"#66CDAA\"}}>\r\n                        <Card.Body>\r\n                            <Form>\r\n                                <Form.Label className = \"pQ\" >כמה בחירות לשאלה ?</Form.Label>\r\n                                <Form.Control type=\"number\" onChange = {()=>{this.questionNum(document.getElementById(\"numQuest\").value)}} id = \"numQuest\" style = {{\"borderColor\":\"#66CDAA\"}}/>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card style = {{\"width\": \"20%\",\"display\": \"inline-block\", \"borderColor\":\"#66CDAA\"}}>\r\n\r\n                        <Card.Body>\r\n                            <Form>\r\n                                <Form.Label className = \"pQ\" >איזה אזור לשאלה ?</Form.Label>\r\n                                <Form.Control type=\"number\" onChange = {()=>{this.zone(document.getElementById(\"zone\").value)}} id = \"zone\" style = {{\"borderColor\":\"#66CDAA\"}}/>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card style = {{\"marginRight\":\"10%\",\"display\": \"inline-block\",\"width\": \"60%\", \"borderColor\":\"#66CDAA\"}}>\r\n                        <Card.Body>\r\n                            <Form id =\"plusQ\">\r\n                            <Form.Label className = \"pQ\" >תשובות :</Form.Label>\r\n\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Button className = \"w-15\" style= {{\"display\" : \"inline-block\",\"marginRight\" : \"40%\", \"marginTop\" : \"10px\",\"backgroundColor\" : \"#66CDAA\", \"borderColor\":\"#66CDAA\"}} type = \"submit\"\r\n                         onClick={()=>{this.writeData(document.getElementById(\"add\").value,document.getElementById(\"numQuest\").value,document.getElementById(\"zone\").value)}}>הוספה</Button>\r\n                    <Button className = \"w-15\" style= {{\"display\" : \"inline-block\",\"marginRight\" : \"7%\", \"marginTop\" : \"10px\", \"backgroundColor\" : \"red\", \"borderColor\":\"red\"}} type = \"submit\"\r\n                         onClick={()=>{this.suppData(document.getElementById(\"add\").value,document.getElementById(\"numQuest\").value)}}>מחיקה</Button>\r\n\r\n                </Card.Body>\r\n            </Card>   */}\r\n\r\n    </div>\r\n\r\n    )\r\n    }\r\n}\r\n\r\nexport default FormHook\r\n","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\ForgotPassword.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\newForm.js",["87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React ,{Component} from 'react'\r\nimport {db} from '../firebase/firebase'\r\nimport {Card} from 'react-bootstrap'\r\nimport Quest from \"./createQuest\";\r\nimport apiKey from \"./emailkey\";\r\nimport emailjs from \"emailjs-com\"\r\nimport ContactUs from './contactForm'\r\nimport Footer from './Footer'\r\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\r\n\r\n\r\n// let textarray=Array(100);\r\nvar emailTxt=[]\r\nvar body=\"\"\r\nvar useremail=\"\"\r\nvar admins=\"\"\r\nvar checksum=[]\r\nvar update=[];\r\nclass newForm extends Component {\r\n    static numGlo = 0;\r\n    \r\n    constructor(props) {\r\n        emailTxt = []\r\n        body=\"\"\r\n        useremail=\"\";\r\n        admins=\"\"\r\n        super(props);\r\n        this.state = {\r\n            addQuest: false,\r\n            forms: [],\r\n            body:\"\",\r\n            useremail:\"\",\r\n            admins:\"\",\r\n            checksum:[],\r\n            update:[],\r\n           \r\n        }\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let secs1 = []\r\n        let secs2 = []\r\n        let secs3 = []\r\n        var forms = await db.collection(\"Forms\").orderBy(\"created\", \"desc\").get()\r\n        if (forms) {\r\n\r\n            forms.forEach(form => {\r\n                var tr = this.createTag(form)\r\n                switch (form.data().zone) {\r\n                    case 1:\r\n                        secs1.push(form.data())\r\n                        document.getElementById(\"שייכות\").after(tr);\r\n                        break;\r\n                    case 2:\r\n                        secs2.push(form.data())\r\n                        document.getElementById(\"יאוש\").after(tr);\r\n                        break;\r\n                    case 3:\r\n                        secs3.push(form.data())\r\n                        document.getElementById(\"בדידות\").after(tr);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            })\r\n\r\n            var newForm = []\r\n            newForm.push(secs1)\r\n            newForm.push(secs2)\r\n            newForm.push(secs3)\r\n            if(this.props.data)\r\n            {this.setState({forms: newForm,useremail:this.props.location.data.user.email})}\r\n            else{this.setState({forms: newForm})}\r\n        }\r\n\r\n        //getting user email\r\n       \r\n               if(this.props.history)\r\n              {\r\n                  if(this.props.history.location)\r\n                  {\r\n                     if(this.props.history.location.data)\r\n                    {\r\n                        // console.log(this.props.history.location.data.user.email);\r\n                        this.setState({useremail:this.props.history.location.data.user.email})\r\n                        console.log(this.state.useremail);\r\n                   }\r\n                }\r\n              }\r\n              \r\n\r\n\r\n              \r\n              //gettin admins email\r\n             var  Users= await db.collection(\"users\").get()\r\n              if(Users)\r\n              {\r\n                  Users.forEach(users=>{\r\n                    //   console.log(users.data().admins);\r\n                    var newadmins=\"\";\r\n                    users.data().admins.forEach(admin=>{\r\n                        newadmins+=admin+\";\"\r\n                    })\r\n                    \r\n                      this.setState({admins:newadmins})\r\n                      console.log(this.state.admins);\r\n                  })\r\n                \r\n              }\r\n\r\n\r\n\r\n        // try{\r\n        //     let forms = await db.collection(\"Forms\").get()\r\n        //     let i;\r\n        //     let indexarray=[];\r\n        //     forms.docs.forEach((form,index) =>{\r\n        //         i=parseInt(form.id);\r\n        //         indexarray.push(i);\r\n        //         //     if(form.data().zone===1)\r\n        //         //     {\r\n        //         //      secs1.push(form.data())\r\n        //         //     }\r\n        //\r\n        //         //    if(form.data().zone===2)\r\n        //         //    {\r\n        //         //     secs2.push(form.data())\r\n        //         //    }\r\n        //         //    if(form.data().zone===3)\r\n        //         //    {\r\n        //         //     secs3.push(form.data())\r\n        //         //    }\r\n        //     })\r\n        //     indexarray.sort((a,b)=>a-b);\r\n        //     for(let j=0;j<indexarray.length;j++)\r\n        //     {   let k=j.toString()\r\n        //\r\n        //         var docRef = db.collection(\"Forms\").doc(k);\r\n        //\r\n        //         docRef.get().then((doc) => {\r\n        //             if (doc.exists) {\r\n        //                 switch(doc.data().zone){\r\n        //                     case 1:\r\n        //                         secs1.push(doc.data()); break;\r\n        //                     case 2:\r\n        //                         secs2.push(doc.data()); break;\r\n        //                     case 3:\r\n        //                         secs3.push(doc.data()); break;\r\n        //                     default:break;\r\n        //                 }\r\n        //             }\r\n        //         });\r\n        //\r\n        //\r\n        //     }\r\n        //\r\n        //     this.setState({secs1:secs1,secs2:secs2,secs3:secs3})\r\n        //     console.log(this.state)\r\n        // }\r\n        // catch(error){\r\n        //     alert(error);\r\n        // }\r\n    }\r\n\r\n\r\n    createTag(element) {\r\n        let test = element.data()\r\n        let tr = document.createElement('tr')\r\n        let tdQuest = document.createElement('td')\r\n        tdQuest.classList.add(\"pQ\");\r\n        tdQuest.id = parseInt(element.data().created);\r\n\r\n\r\n        tdQuest.textContent = test.quest\r\n        tr.appendChild(tdQuest)\r\n        // console.log(tdQuest);\r\n        let tdAns = document.createElement(\"td\")\r\n        let arrAns\r\n        if (test.answers) {\r\n            arrAns = test.answers\r\n        }\r\n        for (let i = 0; i < arrAns.length; i++) {\r\n\r\n            var x = document.createElement(\"INPUT\");\r\n            x.setAttribute(\"type\", \"radio\");\r\n            x.addEventListener(\r\n                'change',\r\n                (e) => {\r\n                    this.handlerCheck(test.created, test.quest, e.target.value, e.target.id,test.zone,e)\r\n                },\r\n                false\r\n            )\r\n\r\n            x.setAttribute(\"id\", arrAns[i])\r\n            x.setAttribute(\"name\", test.quest)\r\n            //x.setAttribute(\"name\",\"question number:\"+test.numQuest)\r\n            x.setAttribute(\"value\", i + 1)\r\n\r\n            var y = document.createElement(\"LABEL\");\r\n            var t = document.createTextNode(arrAns[i]);\r\n            y.setAttribute(\"htmlFor\", arrAns[i]);\r\n            y.appendChild(t);\r\n            tdAns.appendChild(x)\r\n            tdAns.appendChild(y)\r\n\r\n        }\r\n        tr.appendChild(tdAns)\r\n        \r\n        return tr\r\n    }\r\n\r\n\r\n    handlerCheck(num, q, a, txt,z,e) {\r\n      \r\n        console.log(e);\r\n        //handling the email body output\r\n        var zzz=this.state.forms[z-1];\r\n        var zz;\r\n        var sum=0;\r\n       \r\n        zzz.forEach(element=>{\r\n            if(element.quest===q)\r\n            {zz=element}\r\n        })\r\n        emailTxt[num] = q + \" : \" + txt+\"-\"+\"ערך תשובה\"+\":\"+zz.answersv[parseInt(a)-1];\r\n        body=\"\";\r\n       var currentchecksum=this.state.checksum;\r\n         currentchecksum[num]=parseInt(zz.answersv[parseInt(a)-1]);\r\n         this.setState({checksum:currentchecksum});\r\n         currentchecksum.forEach(value=>{sum+=value});\r\n        emailTxt.forEach(line=>{\r\n            body+=line+\"<br></br>\";\r\n        })\r\n        body+=\"ערך תוצאות השאלון:\"+\"<br></br>\"+sum;\r\n       \r\n        this.setState({body:body})\r\n        //handling the statistic page output\r\n    //     console.log(zz.answersstats);\r\nthis.radiochecked()  \r\n// console.log(this.state.update);\r\n\r\n\r\n    }\r\n\r\n\r\n    //SUBMIT FORM CLICKED is called when the submit button was clicked.\r\n//it updates the firestore so the stat page will be ready for next read\r\nradiochecked(){\r\n\r\nconsole.log(\"in\")\r\n   \r\n    // adding +1 to the answer given by the form\r\n  \r\nlet form=document.getElementById(\"addQuestion\");\r\n// console.log(form);\r\nlet inputs=document.getElementsByTagName(\"input\");\r\n// console.log(inputs);\r\nvar checkedarray=[];\r\n\r\nfor(let i=0;i<inputs.length;i++)\r\n{\r\n    if(inputs[i].checked)\r\n   {\r\n    //    console.log(inputs[i]);\r\n    checkedarray.push(parseInt(inputs[i].value));    \r\n}\r\n}\r\n// console.log(checkedarray);\r\nthis.setState({update:checkedarray});\r\n// console.log(this.state.update);\r\n// this.updatefirebase()\r\n}  \r\n\r\nupdatefirebase(){\r\n   var forms= db.collection('Forms').orderBy(\"created\",\"asc\").get().then((ans)=>{\r\n            ans.forEach(element=>{\r\n                if(element.exists)\r\n                {\r\n                    let currentquestion=element.id.toString();\r\n                    let created=element.data().created;\r\n                    // console.log(currentquestion);\r\n                    // console.log(created);\r\n                    var answeroptions=element.data().answers;\r\n                    var x0,x1,x2,x3,x4;\r\n                    if(element.data().answersstats)\r\n                        {\r\n                            x0=parseInt(element.data().answersstats[0]);\r\n                            \r\n                            x1=parseInt(element.data().answersstats[1]);\r\n                            \r\n                            x2=parseInt(element.data().answersstats[2]);\r\n                            \r\n                            x3=parseInt(element.data().answersstats[3]);\r\n                            \r\n                            x4=parseInt(element.data().answersstats[4]);\r\n                        }\r\n                        console.log(x0,x1,x2,x3,x4);\r\n                        // console.log(this.state.update);\r\n                        // console.log(this.state.update.length);\r\n                        answeroptions.forEach(answer=>{\r\n                            var k=document.getElementById(answer);\r\n                           \r\n                            if(k && k.checked && k.name==element.data().quest)\r\n                            {\r\n                                console.log(k);\r\n                                console.log(k.name);\r\n                                console.log(element.data().quest)\r\n                                console.log(x0,x1,x2,x3,x4);\r\n                                \r\n                              let place=parseInt(k.value)-1;\r\n\r\n                                switch (place){\r\n                                    case 0: x0+=1; break;\r\n                                    case 1: x1+=1; break;\r\n                                    case 2: x2+=1; break;\r\n                                    case 3: x3+=1; break;\r\n                                    case 4: x4+=1; break;\r\n                                    default:break;\r\n                                }\r\n                            \r\n                              db.collection(\"Forms\").doc(currentquestion).update({\r\n                                  answersstats:[x0,x1,x2,x3,x4],\r\n                                },{ merge: true });\r\n                                    \r\n\r\n                            }\r\n                        })\r\n\r\n                }\r\n            })\r\n           \r\n        })\r\n       var submitbtn= document.getElementById(\"submit\");\r\n       submitbtn.removeAttribute(\"hidden\");\r\n       \r\n       var addquestiontable= document.getElementById(\"addQuestion\");\r\n       addquestiontable.setAttribute(\"hidden\",\"true\");\r\n\r\n       var updatetbtn= document.getElementById(\"update\");\r\n       updatetbtn.setAttribute(\"hidden\",\"true\");\r\n    }\r\n\r\n\r\n\r\n\r\n   \r\n  \r\n\r\n    sendEmail(e) {\r\n     \r\n     //update db first\r\n        console.log(\"iiiin\")\r\n       \r\n        console.log(e);\r\n        e.preventDefault();   \r\n        emailjs.sendForm('service_msxx82d', 'template_p7wsh3q', e.target, 'user_zNfO8cPQT80umB3KCdmPj')\r\n            .then((result) => {\r\n                console.log(result.text);\r\n                alert(\"email sent\");\r\n            }, (error) => {\r\n                console.log(error.text);\r\n            });\r\n            \r\n        e.target.reset()\r\n    }\r\n\r\n\r\n\r\n\r\n    handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        console.log(e.target)\r\n        \r\n    }\r\n\r\n    \r\n   \r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div dir=\"rtl\">\r\n                <Card style={{\"padding\": \"1.5%\", \"borderColor\":\"#66CDAA\"}}>\r\n                    <h1 style={{\"textAlign\":\"center\"}}>שאלון מש\"ה</h1>\r\n\r\n                    <form id=\"main_form\" encType=\"text/plain\" onSubmit={this.sendEmail}>\r\n\r\n\r\n\r\n                        <h4 style={{\"textAlign\":\"center\"}}>במקרים בהם יש סקאלה: 1-5, כאשר 1 מייצג מצב טוב ו-5 מייצג מצב גרוע</h4>\r\n\r\n\r\n\r\n                        <table id=\"addQuestion\">\r\n                            <tbody id=\"שייכות\" className=\"pre_titles\"><tr><td>שייכות:</td></tr></tbody>\r\n                            <tbody id=\"יאוש\"className=\"pre_titles\"><tr><td>יאוש/תקווה:</td></tr></tbody>\r\n                            <tbody id=\"בדידות\"className=\"pre_titles\"><tr><td>בדידות/ניכור:</td></tr></tbody>\r\n                        </table>\r\n                       \r\n                        \r\n                        <textarea id=\"from\" hidden={false} defaultValue={this.state.useremail} name=\"from_name\"></textarea>\r\n                        <textarea id=\"to\" hidden={true} defaultValue={this.state.admins} name=\"to_name\"></textarea>\r\n                        <textarea id=\"massage\" hidden={true} defaultValue={this.state.body} name=\"message\"></textarea>\r\n                      <input id=\"update\" type=\"button\" className=\"w-100 btn btn-primary\" defaultValue=\"סיים שאלון\" onClick={this.updatefirebase}></input>\r\n                       <br></br>\r\n                        <input id=\"submit\" hidden={true} type=\"submit\" className=\"w-100 btn btn-primary\" value=\"שלח מייל\"></input>\r\n                    </form>\r\n                </Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {\r\n                    this.state.forms.length>0?\r\n                    <Quest forms={this.state.forms}/>:\r\n                        <Quest/>\r\n                      \r\n                }\r\n                {\r\n                     this.state.forms.length>0? <Footer forms={this.state.forms}/>:<Footer/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default newForm;\r\n","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\Statistics.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\createQuest.js",["101"],"import React ,{Component} from 'react'\r\nimport {Card,Form,Button} from 'react-bootstrap'\r\nimport {db} from \"../firebase/firebase\";\r\n\r\n\r\n// (e)=>{\r\n//     console.log(e)\r\n//     ans[i]=e\r\n//     this.setState({answers:ans})\r\n// }\r\n\r\n\r\nclass Quest extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var forms=props.forms\r\n\r\n\r\n        this.state = {\r\n            addQuest: true,\r\n            answers:\"\",\r\n            answersv:\"\",\r\n            quest:\"\",\r\n            questionNumber:\"\",\r\n            zone:\"\",\r\n            created:\"\"\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    uploadtoFirebase() {\r\n        var created = 0;\r\n        if (this.props.forms)\r\n        {\r\n            created = this.props.forms[this.state.zone-1].length\r\n        }\r\n\r\n\r\n        var form={\r\n            answers:this.state.answers,\r\n            answersv:this.state.answersv,\r\n            answersstats:[0,0,0,0,0],\r\n            quest:this.state.quest,\r\n            questionNumber:this.state.questionNumber,\r\n            zone:Number(this.state.zone),\r\n            created:created,\r\n        }\r\n\r\n       db.collection(\"Forms\").doc().set(form).then((res)=>{\r\n           alert(\"done\")\r\n           this.setState({\r\n               addQuest: true,\r\n               answers:\"\",\r\n               answersv:\"\",\r\n               quest:\"\",\r\n               questionNumber:\"\",\r\n               zone:\"\",\r\n               created:\"\"})\r\n       })\r\n\r\n\r\n    }\r\n    questionNum(num){\r\n\r\n        let formC;\r\n        let formV;\r\n        let clasString;\r\n        document.getElementById('plusQ').innerHTML = \"תשובות לשאלה\";\r\n        // this.numGlo = num\r\n        // this.yuvalquestionnum++;\r\n        var ans=[]\r\n        var ansv=[]     //the value of each answer in numbers 0-5\r\n      \r\n      \r\n        for(let i = 0 ; i < num ; i++)\r\n        {\r\n\r\n            formC = document.createElement(\"input\");\r\n            formV=document.createElement(\"input\");\r\n           \r\n           formV.type=\"number\";\r\n           formV.min=0;\r\n           formV.max=5;\r\n\r\n           \r\n           formV.placeholder=\"0-5\";\r\n            clasString = \"quest\" + i;\r\n            formC.setAttribute(\"id\", clasString+i)\r\n            formV.setAttribute(\"id\",\"value\"+clasString+i)\r\n            formC.addEventListener(\r\n                'change',\r\n                (e)=> {\r\n                        ans[i]=e.target.value\r\n                            this.setState({answers:ans})\r\n                },\r\n                false\r\n            );\r\n            formV.addEventListener(\r\n                'change',\r\n                (e)=> {\r\n                        ansv[i]=e.target.value\r\n                            this.setState({answersv:ansv})\r\n                            console.log(this.state.answersv);\r\n                },\r\n                false\r\n            );\r\n            document.getElementById(\"plusQ\").appendChild(formC)\r\n            document.getElementById(\"plusQ\").appendChild(formV)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.addQuest ?\r\n                    (<Button id=\"addquestionbtn\" onClick={() => {\r\n                        this.setState({addQuest: false})\r\n                    }}>הוסף שאלה</Button>) :\r\n                    (\r\n                        <div>\r\n                            <div>\r\n                                <Card style={{\"marginTop\": \"55px\", \"borderColor\": \"#66CDAA\"}}>\r\n                                    <Card.Body>\r\n\r\n                                        <Form>\r\n                                            <Form.Label className=\"pQ\">הוספת/מחיקה שאלה :</Form.Label>\r\n                                            <Form.Control onChange={(e)=>{\r\n\r\n                                                this.setState({quest:e.target.value})}}   id=\"add\" style={{\"borderColor\": \"#66CDAA\"}}/>\r\n                                        </Form>\r\n\r\n                                        <Card style={{\r\n                                            \"width\": \"20%\",\r\n                                            \"display\": \"inline-block\",\r\n                                            \"borderColor\": \"#66CDAA\"\r\n                                        }}>\r\n                                            <Card.Body>\r\n                                                <Form>\r\n                                                    <Form.Label className=\"pQ\">כמה בחירות לשאלה ?</Form.Label>\r\n                                                    <Form.Control min=\"0\" max=\"5\" placeholder=\"0\" type=\"number\" onChange={(e) => {\r\n                                                       this.setState({numQuest:e.target.value,answers:[]})\r\n\r\n                                                        this.questionNum(e.target.value)\r\n                                                    }} id=\"numQuest\" style={{\"borderColor\": \"#66CDAA\"}}/>\r\n                                                </Form>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                        <Card style={{\r\n                                            \"width\": \"20%\",\r\n                                            \"display\": \"inline-block\",\r\n                                            \"borderColor\": \"#66CDAA\"\r\n                                        }}>\r\n\r\n                                            <Card.Body>\r\n                                                <Form>\r\n                                                    <Form.Label  className=\"pQ\">איזה אזור לשאלה ?</Form.Label>\r\n                                                    <Form.Control  placeholder=\"1\" min=\"1\" max=\"3\" type=\"number\" onChange={(e) => {\r\n                                                        this.setState({zone:e.target.value})\r\n                                                        // this.zone(document.getElementById(\"zone\").value)\r\n                                                    }} id=\"zone\" style={{\"borderColor\": \"#66CDAA\"}}/>\r\n                                                </Form>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n\r\n                                        <Card style={{\r\n                                            \"marginRight\": \"10%\",\r\n                                            \"display\": \"inline-block\",\r\n                                            \"width\": \"60%\",\r\n                                            \"borderColor\": \"#66CDAA\"\r\n                                        }}>\r\n                                            <Card.Body>\r\n                                                <Form id=\"plusQ\">\r\n                                                    <Form.Label className=\"pQ\">תשובות :</Form.Label>\r\n\r\n                                                </Form>\r\n                                            </Card.Body>\r\n                                        </Card>\r\n\r\n                                        <Button className=\"w-15\" style={{\r\n                                            \"display\": \"inline-block\",\r\n                                            \"marginRight\": \"40%\",\r\n                                            \"marginTop\": \"10px\",\r\n                                            \"backgroundColor\": \"#66CDAA\",\r\n                                            \"borderColor\": \"#66CDAA\"\r\n                                        }} type=\"submit\"\r\n                                                onClick={() => {\r\n                                                    this.uploadtoFirebase()\r\n                                                    // this.writeData(document.getElementById(\"add\").value, document.getElementById(\"numQuest\").value, document.getElementById(\"zone\").value)\r\n                                                }}>הוספה</Button>\r\n                                        <Button className=\"w-15\" style={{\r\n                                            \"display\": \"inline-block\",\r\n                                            \"marginRight\": \"7%\",\r\n                                            \"marginTop\": \"10px\",\r\n                                            \"backgroundColor\": \"red\",\r\n                                            \"borderColor\": \"red\"\r\n                                        }} type=\"submit\"\r\n                                                onClick={() => {\r\n                                                    this.suppData(document.getElementById(\"add\").value, document.getElementById(\"numQuest\").value)\r\n                                                }}>מחיקה</Button>\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                            <Button onClick={() => {\r\n                                this.setState({addQuest: true})\r\n                                this.uploadtoFirebase()\r\n                            }}>שמירת שינויים\r\n                            </Button>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Quest;\r\n","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\emailkey.js",["102"],"import{ init } from 'emailjs-com';\r\n\r\ninit(\"user_zNfO8cPQT80umB3KCdmPj\");\r\n\r\n\r\nexport default {\r\n    USER_ID: `user_zNfO8cPQT80umB3KCdmPj`, //userID\r\n    TEMPLATE_ID: `hexpower_temp`,         //templateID\r\n    }\r\n\r\n\r\n// console.log(e);\r\n// e.preventDefault(); // Prevents default refresh by the browser\r\n// emailjs.sendForm(`gmail`, apiKey.TEMPLATE_ID, e.target, apiKey.USER_ID)\r\n// .then((result) => {\r\n// alert(\"Message Sent, We will get back to you shortly\", result.text);\r\n// },\r\n// (error) => {\r\n// alert(\"An error occurred, Please try again\", error.text);\r\n// });\r\n","C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\components\\contactForm.js",[],"C:\\Users\\Yuval\\Documents\\GitHub\\Project_Mascha\\moshe\\src\\firebase\\firebase.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":2,"column":22,"nodeType":"109","messageId":"110","endLine":2,"endColumn":26},{"ruleId":"107","severity":1,"message":"112","line":197,"column":25,"nodeType":"109","messageId":"110","endLine":197,"endColumn":40},{"ruleId":"107","severity":1,"message":"113","line":212,"column":25,"nodeType":"109","messageId":"110","endLine":212,"endColumn":27},{"ruleId":"107","severity":1,"message":"114","line":214,"column":25,"nodeType":"109","messageId":"110","endLine":214,"endColumn":27},{"ruleId":"107","severity":1,"message":"115","line":216,"column":25,"nodeType":"109","messageId":"110","endLine":216,"endColumn":27},{"ruleId":"107","severity":1,"message":"116","line":218,"column":25,"nodeType":"109","messageId":"110","endLine":218,"endColumn":27},{"ruleId":"107","severity":1,"message":"117","line":220,"column":25,"nodeType":"109","messageId":"110","endLine":220,"endColumn":27},{"ruleId":"107","severity":1,"message":"118","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":17},{"ruleId":"107","severity":1,"message":"120","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":23},{"ruleId":"107","severity":1,"message":"121","line":15,"column":5,"nodeType":"109","messageId":"110","endLine":15,"endColumn":14},{"ruleId":"107","severity":1,"message":"122","line":16,"column":5,"nodeType":"109","messageId":"110","endLine":16,"endColumn":11},{"ruleId":"107","severity":1,"message":"123","line":17,"column":5,"nodeType":"109","messageId":"110","endLine":17,"endColumn":13},{"ruleId":"107","severity":1,"message":"124","line":18,"column":5,"nodeType":"109","messageId":"110","endLine":18,"endColumn":11},{"ruleId":"125","severity":1,"message":"126","line":227,"column":44,"nodeType":"127","messageId":"128","endLine":227,"endColumn":45},{"ruleId":"125","severity":1,"message":"126","line":227,"column":56,"nodeType":"127","messageId":"128","endLine":227,"endColumn":57},{"ruleId":"125","severity":1,"message":"126","line":236,"column":35,"nodeType":"127","messageId":"128","endLine":236,"endColumn":36},{"ruleId":"107","severity":1,"message":"129","line":256,"column":5,"nodeType":"109","messageId":"110","endLine":256,"endColumn":9},{"ruleId":"107","severity":1,"message":"130","line":277,"column":8,"nodeType":"109","messageId":"110","endLine":277,"endColumn":13},{"ruleId":"107","severity":1,"message":"131","line":282,"column":25,"nodeType":"109","messageId":"110","endLine":282,"endColumn":32},{"ruleId":"132","severity":1,"message":"133","line":305,"column":56,"nodeType":"127","messageId":"134","endLine":305,"endColumn":58},{"ruleId":"107","severity":1,"message":"130","line":18,"column":13,"nodeType":"109","messageId":"110","endLine":18,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":6,"column":1,"nodeType":"137","endLine":9,"endColumn":6},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'currentquestion' is assigned a value but never used.","'x0' is assigned a value but never used.","'x1' is assigned a value but never used.","'x2' is assigned a value but never used.","'x3' is assigned a value but never used.","'x4' is assigned a value but never used.","'apiKey' is defined but never used.","'ContactUs' is defined but never used.","'ThemeConsumer' is defined but never used.","'useremail' is assigned a value but never used.","'admins' is assigned a value but never used.","'checksum' is assigned a value but never used.","'update' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'form' is assigned a value but never used.","'forms' is assigned a value but never used.","'created' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]